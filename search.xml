<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>不使用海康威视的WEBSDK如何在浏览器中展示实时视频流</title>
      <link href="//vue-use-hkvscamera-nonuse-websdk"/>
      <url>//vue-use-hkvscamera-nonuse-websdk</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>海康威视官方提供了Web3.0和Web3.2的SDK,</p><p>Web3.0需要浏览器支持NPAPI,但是高版本的浏览器都已经禁用了这种功能.</p><p>Web3.2需要设备支持WebSocket.</p><p>这两个Web SDK都无法适用于高版本浏览器显示海康威视老设备的视频流.</p><p>无奈只能求助官方技术支持.</p><p>官方技术支持响应还是很迅速的.描述完我的需求后,技术小哥哥(小姐姐)立马给我了一个方案(估计是被咨询了很多次):</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">您可以用RTSP协议取流，然后用第三方比如FFmpeg对数据处理成FLV或者RTMP，在谷歌网页上播放</span><br></pre></td></tr></table></figure><p>又经过一通查询发现高版本浏览器也不支持RTMP流的显示了.只能使用flv,然后使用bilibili开源的flv.js进行展示.</p><p>方案确认了,那还愁啥,搞起来!嗨起来!</p><h2 id="准备"><a href="#准备" class="headerlink" title="准备"></a>准备</h2><p>因为我的项目部署环境是windows,所以所有软件都是windows版本.</p><p>ffmpeg下载地址</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://ffmpeg.org/download.html#build-windows</span><br></pre></td></tr></table></figure><p>通过查询,rtsp要处理成flv需要借助nginx的nginx-http-flv-module模块.windows下编译带该模块的nginx超级麻烦,不过有人在CSDN上提供了编译好后的可用包.</p><p>下载地址:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://download.csdn.net/download/KayChanGEEK/12270210</span><br></pre></td></tr></table></figure><p>为了方便测试,建议再下载一个vlc:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://www.videolan.org/</span><br></pre></td></tr></table></figure><h2 id="Nginx配置"><a href="#Nginx配置" class="headerlink" title="Nginx配置"></a>Nginx配置</h2><p>配置文件参考</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br></pre></td><td class="code"><pre><span class="line">#user  nobody;</span><br><span class="line"># multiple workers works !</span><br><span class="line">worker_processes  2;</span><br><span class="line"> </span><br><span class="line">#error_log  logs/error.log;</span><br><span class="line">#error_log  logs/error.log  notice;</span><br><span class="line">#error_log  logs/error.log  info;</span><br><span class="line"> </span><br><span class="line">#pid        logs/nginx.pid;</span><br><span class="line"> </span><br><span class="line">events &#123;</span><br><span class="line">    worker_connections  8192;</span><br><span class="line">    # max value 32768, nginx recycling connections+registry optimization = </span><br><span class="line">    #   this.value * 20 = max concurrent connections currently tested with one worker</span><br><span class="line">    #   C1000K should be possible depending there is enough ram/cpu power</span><br><span class="line">    # multi_accept on;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line">rtmp &#123;</span><br><span class="line">    server &#123;</span><br><span class="line">        listen 1935;</span><br><span class="line">        chunk_size 4000;</span><br><span class="line">        application live &#123;</span><br><span class="line">             live on;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line">http &#123;</span><br><span class="line">    #include      /nginx/conf/naxsi_core.rules;</span><br><span class="line">    include       mime.types;</span><br><span class="line">    default_type  application/octet-stream;</span><br><span class="line"> </span><br><span class="line">    #log_format  main  &#x27;$remote_addr:$remote_port - $remote_user [$time_local] &quot;$request&quot; &#x27;</span><br><span class="line">    #                  &#x27;$status $body_bytes_sent &quot;$http_referer&quot; &#x27;</span><br><span class="line">    #                  &#x27;&quot;$http_user_agent&quot; &quot;$http_x_forwarded_for&quot;&#x27;;</span><br><span class="line"> </span><br><span class="line">    #access_log  logs/access.log  main;</span><br><span class="line"> </span><br><span class="line">#     # loadbalancing PHP</span><br><span class="line">#     upstream myLoadBalancer &#123;</span><br><span class="line">#         server 127.0.0.1:9001 weight=1 fail_timeout=5;</span><br><span class="line">#         server 127.0.0.1:9002 weight=1 fail_timeout=5;</span><br><span class="line">#         server 127.0.0.1:9003 weight=1 fail_timeout=5;</span><br><span class="line">#         server 127.0.0.1:9004 weight=1 fail_timeout=5;</span><br><span class="line">#         server 127.0.0.1:9005 weight=1 fail_timeout=5;</span><br><span class="line">#         server 127.0.0.1:9006 weight=1 fail_timeout=5;</span><br><span class="line">#         server 127.0.0.1:9007 weight=1 fail_timeout=5;</span><br><span class="line">#         server 127.0.0.1:9008 weight=1 fail_timeout=5;</span><br><span class="line">#         server 127.0.0.1:9009 weight=1 fail_timeout=5;</span><br><span class="line">#         server 127.0.0.1:9010 weight=1 fail_timeout=5;</span><br><span class="line">#         least_conn;</span><br><span class="line">#     &#125;</span><br><span class="line"> </span><br><span class="line">    sendfile        off;</span><br><span class="line">    #tcp_nopush     on;</span><br><span class="line"> </span><br><span class="line">    server_names_hash_bucket_size 128;</span><br><span class="line"> </span><br><span class="line">## Start: Timeouts ##</span><br><span class="line">    client_body_timeout   10;</span><br><span class="line">    client_header_timeout 10;</span><br><span class="line">    keepalive_timeout     30;</span><br><span class="line">    send_timeout          10;</span><br><span class="line">    keepalive_requests    10;</span><br><span class="line">## End: Timeouts ##</span><br><span class="line"> </span><br><span class="line">    #gzip  on;</span><br><span class="line"> </span><br><span class="line">    server &#123;</span><br><span class="line">        listen       80;</span><br><span class="line">        server_name  localhost;</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">        location /stat &#123;</span><br><span class="line">            rtmp_stat all;</span><br><span class="line">            rtmp_stat_stylesheet stat.xsl;</span><br><span class="line">        &#125;</span><br><span class="line">        location /stat.xsl &#123;</span><br><span class="line">            root nginx-rtmp-module/;</span><br><span class="line">        &#125;</span><br><span class="line">        location /control &#123;</span><br><span class="line">            rtmp_control all;</span><br><span class="line">        &#125;</span><br><span class="line"> </span><br><span class="line">    # 重要 http-flv  转流配置 </span><br><span class="line">        location /live &#123;</span><br><span class="line">            flv_live on; #打开 HTTP 播放 FLV 直播流功能</span><br><span class="line">            chunked_transfer_encoding on; #支持 &#x27;Transfer-Encoding: chunked&#x27; 方式回复</span><br><span class="line"> </span><br><span class="line">            add_header &#x27;Access-Control-Allow-Origin&#x27; &#x27;*&#x27;; #添加额外的 HTTP 头</span><br><span class="line">            add_header &#x27;Access-Control-Allow-Credentials&#x27; &#x27;true&#x27;; #添加额外的 HTTP 头</span><br><span class="line">            add_header &#x27;Cache-Control&#x27; &#x27;no-cache&#x27;;</span><br><span class="line">        &#125;</span><br><span class="line"> </span><br><span class="line">        #charset koi8-r;</span><br><span class="line">        #access_log  logs/host.access.log  main;</span><br><span class="line"> </span><br><span class="line">        ## Caching Static Files, put before first location</span><br><span class="line">        #location ~* \.(jpg|jpeg|png|gif|ico|css|js)$ &#123;</span><br><span class="line">        #    expires 14d;</span><br><span class="line">        #    add_header Vary Accept-Encoding;</span><br><span class="line">        #&#125;</span><br><span class="line"> </span><br><span class="line"># For Naxsi remove the single # line for learn mode, or the ## lines for full WAF mode</span><br><span class="line">        location / &#123;</span><br><span class="line">      add_header Cache-Control no-cache;</span><br><span class="line">      add_header &#x27;Access-Control-Allow-Origin&#x27; &#x27;*&#x27; always;</span><br><span class="line">      add_header &#x27;Access-Control-Expose-Headers&#x27; &#x27;Content-Length,Content-Range&#x27;;</span><br><span class="line">      add_header &#x27;Access-Control-Allow-Headers&#x27; &#x27;Range&#x27;;</span><br><span class="line">    </span><br><span class="line">            #include    /nginx/conf/mysite.rules; # see also http block naxsi include line</span><br><span class="line">            ##SecRulesEnabled;</span><br><span class="line">         ##DeniedUrl &quot;/RequestDenied&quot;;</span><br><span class="line">         ##CheckRule &quot;$SQL &gt;= 8&quot; BLOCK;</span><br><span class="line">         ##CheckRule &quot;$RFI &gt;= 8&quot; BLOCK;</span><br><span class="line">         ##CheckRule &quot;$TRAVERSAL &gt;= 4&quot; BLOCK;</span><br><span class="line">         ##CheckRule &quot;$XSS &gt;= 8&quot; BLOCK;</span><br><span class="line">            root   html;</span><br><span class="line">            index  index.html index.htm;</span><br><span class="line">        &#125;</span><br><span class="line"> </span><br><span class="line"># For Naxsi remove the ## lines for full WAF mode, redirect location block used by naxsi</span><br><span class="line">        ##location /RequestDenied &#123;</span><br><span class="line">        ##    return 412;</span><br><span class="line">        ##&#125;</span><br><span class="line"> </span><br><span class="line">## Lua examples !</span><br><span class="line">#         location /robots.txt &#123;</span><br><span class="line">#           rewrite_by_lua &#x27;</span><br><span class="line">#             if ngx.var.http_host ~= &quot;localhost&quot; then</span><br><span class="line">#               return ngx.exec(&quot;/robots_disallow.txt&quot;);</span><br><span class="line">#             end</span><br><span class="line">#           &#x27;;</span><br><span class="line">#         &#125;</span><br><span class="line"> </span><br><span class="line">        #error_page  404              /404.html;</span><br><span class="line"> </span><br><span class="line">        # redirect server error pages to the static page /50x.html</span><br><span class="line">        #</span><br><span class="line">        error_page   500 502 503 504  /50x.html;</span><br><span class="line">        location = /50x.html &#123;</span><br><span class="line">            root   html;</span><br><span class="line">        &#125;</span><br><span class="line"> </span><br><span class="line">        # proxy the PHP scripts to Apache listening on 127.0.0.1:80</span><br><span class="line">        #</span><br><span class="line">        #location ~ \.php$ &#123;</span><br><span class="line">        #    proxy_pass   http://127.0.0.1;</span><br><span class="line">        #&#125;</span><br><span class="line"> </span><br><span class="line">        # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000</span><br><span class="line">        #</span><br><span class="line">        #location ~ \.php$ &#123;</span><br><span class="line">        #    root           html;</span><br><span class="line">        #    fastcgi_pass   127.0.0.1:9000; # single backend process</span><br><span class="line">        #    fastcgi_pass   myLoadBalancer; # or multiple, see example above</span><br><span class="line">        #    fastcgi_index  index.php;</span><br><span class="line">        #    fastcgi_param  SCRIPT_FILENAME  $document_root$fastcgi_script_name;</span><br><span class="line">        #    include        fastcgi_params;</span><br><span class="line">        #&#125;</span><br><span class="line"> </span><br><span class="line">        # deny access to .htaccess files, if Apache&#x27;s document root</span><br><span class="line">        # concurs with nginx&#x27;s one</span><br><span class="line">        #</span><br><span class="line">        #location ~ /\.ht &#123;</span><br><span class="line">        #    deny  all;</span><br><span class="line">        #&#125;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    # another virtual host using mix of IP-, name-, and port-based configuration</span><br><span class="line">    #</span><br><span class="line">    #server &#123;</span><br><span class="line">    #    listen       8000;</span><br><span class="line">    #    listen       somename:8080;</span><br><span class="line">    #    server_name  somename  alias  another.alias;</span><br><span class="line"> </span><br><span class="line">    #    location / &#123;</span><br><span class="line">    #        root   html;</span><br><span class="line">    #        index  index.html index.htm;</span><br><span class="line">    #    &#125;</span><br><span class="line">    #&#125;</span><br><span class="line"> </span><br><span class="line">    # HTTPS server</span><br><span class="line">    #</span><br><span class="line">    #server &#123;</span><br><span class="line">    #    listen       443 ssl spdy;</span><br><span class="line">    #    server_name  localhost;</span><br><span class="line"> </span><br><span class="line">    #    ssl                  on;</span><br><span class="line">    #    ssl_certificate      cert.pem;</span><br><span class="line">    #    ssl_certificate_key  cert.key;</span><br><span class="line">    #    ssl_session_timeout  5m;</span><br><span class="line">    #    ssl_prefer_server_ciphers On;</span><br><span class="line">    #    ssl_protocols TLSv1 TLSv1.1 TLSv1.2;</span><br><span class="line">    #    ssl_ciphers ECDH+AESGCM:ECDH+AES256:ECDH+AES128:ECDH+3DES:RSA+AESGCM:RSA+AES:RSA+3DES:!aNULL:!eNULL:!MD5:!DSS:!EXP:!ADH:!LOW:!MEDIUM;</span><br><span class="line"> </span><br><span class="line">    #    location / &#123;</span><br><span class="line">    #        root   html;</span><br><span class="line">    #        index  index.html index.htm;</span><br><span class="line">    #    &#125;</span><br><span class="line">    #&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>有两个地方需要特殊说明:</p><p>第一处:这里是配置rtmp, 1935端口是默认端口.</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">rtmp &#123;</span><br><span class="line">    server &#123;</span><br><span class="line">        listen 1935;</span><br><span class="line">        chunk_size 4000;</span><br><span class="line">        application live &#123;</span><br><span class="line">             live on;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>第二处: flv拉流的配置</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">location /live &#123;</span><br><span class="line">            flv_live on; #打开 HTTP 播放 FLV 直播流功能</span><br><span class="line">            chunked_transfer_encoding on; #支持 &#x27;Transfer-Encoding: chunked&#x27; 方式回复</span><br><span class="line"> </span><br><span class="line">            add_header &#x27;Access-Control-Allow-Origin&#x27; &#x27;*&#x27;; #添加额外的 HTTP 头</span><br><span class="line">            add_header &#x27;Access-Control-Allow-Credentials&#x27; &#x27;true&#x27;; #添加额外的 HTTP 头</span><br><span class="line">            add_header &#x27;Cache-Control&#x27; &#x27;no-cache&#x27;;</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure><h2 id="海康威视摄像头RTSP流获取"><a href="#海康威视摄像头RTSP流获取" class="headerlink" title="海康威视摄像头RTSP流获取"></a>海康威视摄像头RTSP流获取</h2><p>网上一堆介绍,可自行搜索学习.</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">rtsp://admin:123456@192.168.10.54:554/Streaming/Channels/101?transportmode=unicast</span><br><span class="line"></span><br><span class="line">rtsp:协议</span><br><span class="line">admin:摄像头登录用户名</span><br><span class="line">123456:摄像头登录密码</span><br><span class="line">192.168.10.54:摄像头ip</span><br><span class="line">554:拉rtsp流的端口</span><br><span class="line">101:通道表示(主码流通道)</span><br><span class="line">transportmode=unicast:传输模式</span><br></pre></td></tr></table></figure><h2 id="使用ffmpeg进行流转换"><a href="#使用ffmpeg进行流转换" class="headerlink" title="使用ffmpeg进行流转换"></a>使用ffmpeg进行流转换</h2><p>在命令行中输入一下命令</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ffmpeg  -rtsp_transport tcp -i rtsp://admin:123456@192.168.10.54:554/Streaming/Channels/101?transportmode=unicast -vcodec copy -an -acodec copy -f flv rtmp://127.0.0.1:1935/live/mystream</span><br><span class="line"></span><br><span class="line">rtmp://127.0.0.1:1935/live/mystream: 这个地址是nginx中配置的rtmp节点的地址, live是配置的app名称,mystream可以随意指定</span><br></pre></td></tr></table></figure><p>出现下图所示效果且进程不终止,表明转换流成功了.</p><p><img src="https://gitee.com/dodoliu/dodoliuimg/raw/master/2021/image-20211213174237900.png" alt="image-20211213174237900"></p><p>有了上面的rtmp地址后,我们可以知道flv取流的地址为</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">http://127.0.0.1/live?port=1935&amp;app=live&amp;stream=mystream</span><br><span class="line"></span><br><span class="line">这是通过nginx中http节点配置的.请注意app的值和stream的值</span><br><span class="line">对应的是</span><br><span class="line">rtmp://127.0.0.1:1935/live/mystream</span><br><span class="line">中的 live和mystream</span><br></pre></td></tr></table></figure><p>有了flv拉流的地址后,我们就可以在vlc中进行校验</p><h2 id="在vlc中进行测试"><a href="#在vlc中进行测试" class="headerlink" title="在vlc中进行测试"></a>在vlc中进行测试</h2><p>点击vlc菜单中的 “媒体”,然后选择 “流”</p><p>然后选择”网络”</p><p><img src="https://gitee.com/dodoliu/dodoliuimg/raw/master/2021/image-20211213175059382.png" alt="image-20211213175059382"></p><p>然后将右下方的 “串流” 选择为 “播放”,在等待几秒后就可以看到正常的视频图像了.</p><p><img src="https://gitee.com/dodoliu/dodoliuimg/raw/master/2021/image-20211213175204858.png" alt="image-20211213175204858"></p><p>如果没有显示,请继续爬坑吧!!!</p><h2 id="在vue中显示"><a href="#在vue中显示" class="headerlink" title="在vue中显示"></a>在vue中显示</h2><p>我的前端项目是个vue项目.</p><p>先安装flv.js</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install --save flv.js</span><br></pre></td></tr></table></figure><p>html主要代码</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;video</span><br><span class="line">  id=&quot;vPull&quot;</span><br><span class="line">  autoplay</span><br><span class="line">  style=&quot;height: 100%; width: 100%; object-fit: fill&quot;</span><br><span class="line">  muted</span><br><span class="line">&gt;&lt;/video&gt;</span><br></pre></td></tr></table></figure><p>js主要代码.</p><p>参考: <a href="https://blog.csdn.net/HJFQC/article/details/109626836">https://blog.csdn.net/HJFQC/article/details/109626836</a></p><p>感谢原作者</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">mounted() &#123;</span><br><span class="line">  this.play(&quot;http://127.0.0.1/live?port=1935&amp;app=live&amp;stream=mystream&quot;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>我需要想说明一下如何调用,在mounted方法中直接调用play方法,然后传入准备好的flv流地址.</p><p>没有意外的话,vue项目启动后就可以正常查看视频了.</p><h2 id="net-core后台动态切换摄像头地址"><a href="#net-core后台动态切换摄像头地址" class="headerlink" title=".net core后台动态切换摄像头地址"></a>.net core后台动态切换摄像头地址</h2><p>经过上面所有操作后,我们已经可以在前端进行视频展示了.但是如果想切换摄像头该怎么搞?</p><p>可以参考以下思路:</p><p>通过后端代码进行ffmpeg的进程创建和关闭.</p><p>我的后端是.net core项目,参考代码如下:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">/// &lt;summary&gt;</span><br><span class="line">/// 启动ffmpeg进程</span><br><span class="line">/// &lt;/summary&gt;</span><br><span class="line">/// &lt;returns&gt;&lt;/returns&gt;</span><br><span class="line">[HttpGet(&quot;TestCmd54&quot;)]</span><br><span class="line">public async Task&lt;int&gt; TestCmd54()</span><br><span class="line">&#123;    </span><br><span class="line">    var psi = new System.Diagnostics.ProcessStartInfo(&quot;D:\\App\\ffmpeg\\bin\\ffmpeg.exe&quot;, &quot;-rtsp_transport tcp -i rtsp://admin:123456@192.168.10.54:554/Streaming/Channels/101?transportmode=unicast -vcodec copy -an -acodec copy -f flv rtmp://127.0.0.1:1935/live/mystream&quot;);</span><br><span class="line">    var ss = System.Diagnostics.Process.Start(psi);</span><br><span class="line">    return await Task.FromResult(ss.Id);</span><br><span class="line">&#125;</span><br><span class="line">/// &lt;summary&gt;</span><br><span class="line">/// 关闭ffmpeg进程</span><br><span class="line">/// &lt;/summary&gt;</span><br><span class="line">/// &lt;returns&gt;&lt;/returns&gt;</span><br><span class="line">[HttpGet(&quot;TestCmd54Stop&quot;)]</span><br><span class="line">public async Task&lt;int&gt; TestCmd54Stop(int processId)</span><br><span class="line">&#123; </span><br><span class="line">    var stopProcess = System.Diagnostics.Process.GetProcessById(processId);</span><br><span class="line">    if (!stopProcess.HasExited)</span><br><span class="line">    &#123;</span><br><span class="line">        stopProcess.Kill();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    return await Task.FromResult(1);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Vue </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Vue </tag>
            
            <tag> 海康威视 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Vue下使用海康威视WEB无插件开发包V3.2的使用记录</title>
      <link href="//vue-use-hkvscamera-web3-0"/>
      <url>//vue-use-hkvscamera-web3-0</url>
      
        <content type="html"><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>最近做的一个项目需要在Web页面上展示视频图像信息.</p><p>项目中使用的摄像头是海康威视的.经过一番捣鼓后终于可以正常显示图像了.</p><p>于是做个记录,供其他同学爬坑.</p><h2 id="开发准备"><a href="#开发准备" class="headerlink" title="开发准备"></a>开发准备</h2><h6 id="WEB无插件开发包-V3-2-官方下载地址"><a href="#WEB无插件开发包-V3-2-官方下载地址" class="headerlink" title="WEB无插件开发包 V3.2 官方下载地址:"></a>WEB无插件开发包 V3.2 官方下载地址:</h6><p><a href="https://open.hikvision.com/download/5cda567cf47ae80dd41a54b3?type=10&amp;id=4c945d18fa5f49638ce517ec32e24e24">https://open.hikvision.com/download/5cda567cf47ae80dd41a54b3?type=10&amp;id=4c945d18fa5f49638ce517ec32e24e24</a></p><p><img src="https://gitee.com/dodoliu/dodoliuimg/raw/master/2021/image-20211116165646268.png" alt="image-20211116165646268"></p><p>下载完成解压后包含以下内容:</p><p><img src="https://gitee.com/dodoliu/dodoliuimg/raw/master/2021/image-20211116165802938.png" alt="image-20211116165802938"></p><h6 id="设备网络搜索软件下载地址"><a href="#设备网络搜索软件下载地址" class="headerlink" title="设备网络搜索软件下载地址:"></a>设备网络搜索软件下载地址:</h6><p><a href="https://www.hikvision.com/cn/support/Downloads/Desktop-Application/HikvisionTools/?q=%E5%B7%A5%E5%85%B7%E8%BD%AF%E4%BB%B6%EF%BC%88hikvision%20tools%EF%BC%89&amp;position=1">https://www.hikvision.com/cn/support/Downloads/Desktop-Application/HikvisionTools/?q=%E5%B7%A5%E5%85%B7%E8%BD%AF%E4%BB%B6%EF%BC%88hikvision%20tools%EF%BC%89&amp;position=1</a></p><p><img src="https://gitee.com/dodoliu/dodoliuimg/raw/master/2021/image-20211116170730350.png" alt="image-20211116170730350"></p><p>这是海康威视官方提供的用于发现相同局域网下所有设备的工具.效果如下图:</p><p><img src="https://gitee.com/dodoliu/dodoliuimg/raw/master/2021/image-20211116170905290.png" alt="image-20211116170905290"></p><h6 id="一个海康威视的摄像头-需要支持WebSocket"><a href="#一个海康威视的摄像头-需要支持WebSocket" class="headerlink" title="一个海康威视的摄像头,需要支持WebSocket."></a>一个海康威视的摄像头,需要支持WebSocket.</h6><p>我这边测试用的摄像头是这一款:</p><p><img src="https://gitee.com/dodoliu/dodoliuimg/raw/master/2021/image-20211116170300397.png" alt="image-20211116170300397"></p><p>==测试环境下需要保证摄像头和开发机器在同一个局域网内==</p><p>tips:</p><ol><li>如果通过 设备网络搜索软件SADP 无法发现你需要是设备,则表明你的开发机器的网络和设备的网络不通.</li><li>将摄像头设置为使用 DHCP</li></ol><p><img src="https://gitee.com/dodoliu/dodoliuimg/raw/master/2021/image-20211116171337535.png" alt="image-20211116171337535"></p><ol start="3"><li>Vue开发环境下无法看到正常的视频图像,需要使用Nginx进行代理</li></ol><h2 id="快乐的码代码"><a href="#快乐的码代码" class="headerlink" title="快乐的码代码"></a>快乐的码代码</h2><h6 id="Vue代码可以借鉴这篇文章的"><a href="#Vue代码可以借鉴这篇文章的" class="headerlink" title="Vue代码可以借鉴这篇文章的"></a>Vue代码可以借鉴这篇文章的</h6><p><a href="https://blog.csdn.net/Vslong/article/details/118517641">https://blog.csdn.net/Vslong/article/details/118517641</a></p><p>按照上面这篇文章码完Vue代码后如果想正常看到视频图片还需要完成以下操作:</p><h6 id="设置Vue代理"><a href="#设置Vue代理" class="headerlink" title="设置Vue代理"></a>设置Vue代理</h6><p>在Vue的Config文件夹下的index.js配置文件中设置proxyTable</p><p>参考:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">proxyTable: &#123;</span><br><span class="line">  &#x27;/ISAPI&#x27;: &#123;//配置代理地址，前端请求的所有接口都需要带的前缀</span><br><span class="line">    target: &#x27;http://192.168.10.51:12345&#x27;,  #我本地监控的Web3.2无插件Nginx代理地址</span><br><span class="line">    changeOrigin: true,//是否进行跨域</span><br><span class="line">    secure: false,</span><br><span class="line">    // logLevel: &#x27;debug&#x27;,</span><br><span class="line">  &#125;,</span><br><span class="line">  &#x27;/SDK&#x27;: &#123;</span><br><span class="line">    target: &#x27;http://192.168.10.51:12345&#x27;,</span><br><span class="line">    changeOrigin: true,</span><br><span class="line">    secure: false,</span><br><span class="line">    // logLevel: &#x27;debug&#x27;,</span><br><span class="line">  &#125;</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure><h6 id="然后编译发布Vue代码-然后修改Nginx配置"><a href="#然后编译发布Vue代码-然后修改Nginx配置" class="headerlink" title="然后编译发布Vue代码,然后修改Nginx配置."></a>然后编译发布Vue代码,然后修改Nginx配置.</h6><p>参考:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">#user  nobody;</span><br><span class="line">worker_processes  1;</span><br><span class="line"></span><br><span class="line">#error_log  logs/error.log;</span><br><span class="line">#error_log  logs/error.log  notice;</span><br><span class="line">#error_log  logs/error.log  info;</span><br><span class="line"></span><br><span class="line">#pid        logs/nginx.pid;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">events &#123;</span><br><span class="line">    worker_connections  1024;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">http &#123;</span><br><span class="line">    include       mime.types;</span><br><span class="line">    default_type  application/octet-stream;</span><br><span class="line"></span><br><span class="line">    log_format  main  &#x27;$remote_addr - $remote_user [$time_local] &quot;$request&quot; &#x27;</span><br><span class="line">    #                  &#x27;$status $body_bytes_sent &quot;$http_referer&quot; &#x27;</span><br><span class="line">    #                  &#x27;&quot;$http_user_agent&quot; &quot;$http_x_forwarded_for&quot;&#x27;;</span><br><span class="line"></span><br><span class="line">    access_log  logs/access.log  main;</span><br><span class="line">    #access_log      off;</span><br><span class="line">    client_max_body_size 50m;</span><br><span class="line">    sendfile        on;</span><br><span class="line">    #tcp_nopush     on;</span><br><span class="line"></span><br><span class="line">    #keepalive_timeout  0;</span><br><span class="line">    keepalive_timeout  65;</span><br><span class="line"></span><br><span class="line">    #gzip  on;</span><br><span class="line"></span><br><span class="line">    server &#123;</span><br><span class="line">        listen       12345;</span><br><span class="line">        server_name  192.168.10.51;</span><br><span class="line"></span><br><span class="line">        #charset koi8-r;</span><br><span class="line"></span><br><span class="line">        access_log  logs/host.access.log  main;</span><br><span class="line">        #websocket相关配置</span><br><span class="line">      proxy_http_version 1.1;</span><br><span class="line">      proxy_set_header Upgrade $http_upgrade;</span><br><span class="line">      proxy_set_header Connection &quot;upgrade&quot;;</span><br><span class="line">      proxy_set_header X-real-ip $remote_addr;</span><br><span class="line">      proxy_set_header X-Forwarded-For $remote_addr;</span><br><span class="line">    </span><br><span class="line">        proxy_set_header &#x27;sec-ch-ua&#x27; &quot;&quot;;</span><br><span class="line">        proxy_set_header &#x27;sec-ch-ua-mobile&#x27; &quot;&quot;;</span><br><span class="line">        proxy_set_header &#x27;sec-ch-ua-platform:&#x27; &quot;&quot;;</span><br><span class="line">        proxy_set_header &#x27;Sec-Fetch-Dest&#x27; &quot;&quot;;</span><br><span class="line">        proxy_set_header &#x27;Sec-Fetch-Mode&#x27; &quot;&quot;;</span><br><span class="line">        proxy_set_header &#x27;Sec-Fetch-Site&#x27; &quot;&quot;;</span><br><span class="line"></span><br><span class="line">        location / &#123;</span><br><span class="line">            root &quot;../dist&quot;;</span><br><span class="line">            index  index.html index.htm;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">      location ~ /ISAPI|SDK/ &#123;</span><br><span class="line">          if ($http_cookie ~ &quot;webVideoCtrlProxy=(.+)&quot;) &#123;</span><br><span class="line">          proxy_pass http://$cookie_webVideoCtrlProxy;</span><br><span class="line">          break;</span><br><span class="line">          &#125;</span><br><span class="line">      &#125;</span><br><span class="line">      location ^~ /webSocketVideoCtrlProxy &#123;</span><br><span class="line">          #web socket</span><br><span class="line">          proxy_http_version 1.1;</span><br><span class="line">          proxy_set_header Upgrade $http_upgrade;</span><br><span class="line">          proxy_set_header Connection &quot;upgrade&quot;;</span><br><span class="line">          proxy_set_header Host $host;</span><br><span class="line"></span><br><span class="line">          if ($http_cookie ~ &quot;webVideoCtrlProxyWs=(.+)&quot;) &#123;</span><br><span class="line">          proxy_pass http://$cookie_webVideoCtrlProxyWs/$cookie_webVideoCtrlProxyWsChannel?$args;</span><br><span class="line">          break;</span><br><span class="line">          &#125;</span><br><span class="line">          if ($http_cookie ~ &quot;webVideoCtrlProxyWss=(.+)&quot;) &#123;</span><br><span class="line">          proxy_pass http://$cookie_webVideoCtrlProxyWss/$cookie_webVideoCtrlProxyWsChannel?$args;</span><br><span class="line">          break;</span><br><span class="line">          &#125;</span><br><span class="line">      &#125;</span><br><span class="line">        #error_page  404              /404.html;</span><br><span class="line"></span><br><span class="line">        # redirect server error pages to the static page /50x.html</span><br><span class="line">        #</span><br><span class="line">        error_page   500 502 503 504  /50x.html;</span><br><span class="line">        location = /50x.html &#123;</span><br><span class="line">            root   html;</span><br><span class="line">        &#125;</span><br><span class="line">        # error_page  302  /50x.html;</span><br><span class="line">        # location = /50x.html &#123;</span><br><span class="line">        #     root   html;</span><br><span class="line">        # &#125;</span><br><span class="line">        # proxy the PHP scripts to Apache listening on 127.0.0.1:80</span><br><span class="line">        #</span><br><span class="line">        #location ~ \.php$ &#123;</span><br><span class="line">        #    proxy_pass   http://127.0.0.1;</span><br><span class="line">        #&#125;</span><br><span class="line"></span><br><span class="line">        # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000</span><br><span class="line">        #</span><br><span class="line">        #location ~ \.php$ &#123;</span><br><span class="line">        #    root           html;</span><br><span class="line">        #    fastcgi_pass   127.0.0.1:9000;</span><br><span class="line">        #    fastcgi_index  index.php;</span><br><span class="line">        #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;</span><br><span class="line">        #    include        fastcgi_params;</span><br><span class="line">        #&#125;</span><br><span class="line"></span><br><span class="line">        # deny access to .htaccess files, if Apache&#x27;s document root</span><br><span class="line">        # concurs with nginx&#x27;s one</span><br><span class="line">        #</span><br><span class="line">        #location ~ /\.ht &#123;</span><br><span class="line">        #    deny  all;</span><br><span class="line">        #&#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    # another virtual host using mix of IP-, name-, and port-based configuration</span><br><span class="line">    #</span><br><span class="line">    #server &#123;</span><br><span class="line">    #    listen       8000;</span><br><span class="line">    #    listen       somename:8080;</span><br><span class="line">    #    server_name  somename  alias  another.alias;</span><br><span class="line"></span><br><span class="line">    #    location / &#123;</span><br><span class="line">    #        root   html;</span><br><span class="line">    #        index  index.html index.htm;</span><br><span class="line">    #    &#125;</span><br><span class="line">    #&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    # HTTPS server</span><br><span class="line">    #</span><br><span class="line">    #server &#123;</span><br><span class="line">    #    listen       443 ssl;</span><br><span class="line">    #    server_name  localhost;</span><br><span class="line"></span><br><span class="line">    #    ssl_certificate      cert.pem;</span><br><span class="line">    #    ssl_certificate_key  cert.key;</span><br><span class="line"></span><br><span class="line">    #    ssl_session_cache    shared:SSL:1m;</span><br><span class="line">    #    ssl_session_timeout  5m;</span><br><span class="line"></span><br><span class="line">    #    ssl_ciphers  HIGH:!aNULL:!MD5;</span><br><span class="line">    #    ssl_prefer_server_ciphers  on;</span><br><span class="line"></span><br><span class="line">    #    location / &#123;</span><br><span class="line">    #        root   html;</span><br><span class="line">    #        index  index.html index.htm;</span><br><span class="line">    #    &#125;</span><br><span class="line">    #&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>以上是无插件开发包自带的nginx配置,只简单修改了三处:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">监控端口:</span><br><span class="line">listen       12345;</span><br><span class="line">server_name  192.168.10.51;</span><br><span class="line">       </span><br><span class="line">静态文件根目录:       </span><br><span class="line">location / &#123;</span><br><span class="line">    root &quot;../dist&quot;;</span><br><span class="line">    index  index.html index.htm;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">添加:</span><br><span class="line">proxy_set_header &#x27;sec-ch-ua&#x27; &quot;&quot;;</span><br><span class="line">proxy_set_header &#x27;sec-ch-ua-mobile&#x27; &quot;&quot;;</span><br><span class="line">proxy_set_header &#x27;sec-ch-ua-platform:&#x27; &quot;&quot;;</span><br><span class="line">proxy_set_header &#x27;Sec-Fetch-Dest&#x27; &quot;&quot;;</span><br><span class="line">proxy_set_header &#x27;Sec-Fetch-Mode&#x27; &quot;&quot;;</span><br><span class="line">proxy_set_header &#x27;Sec-Fetch-Site&#x27; &quot;&quot;;</span><br></pre></td></tr></table></figure><p>然后重启nginx,访问你的项目web地址应该就能看到视频图像了.</p><p>如果还是看不到就继续爬坑吧!!!</p><h2 id="其它可能会出现的问题"><a href="#其它可能会出现的问题" class="headerlink" title="其它可能会出现的问题"></a>其它可能会出现的问题</h2><h6 id="如果出现了-Too-many-header-这个错误"><a href="#如果出现了-Too-many-header-这个错误" class="headerlink" title="如果出现了 Too-many-header 这个错误"></a>如果出现了 Too-many-header 这个错误</h6><p>参考: <a href="https://www.scaugreen.cn/posts/65442/">https://www.scaugreen.cn/posts/65442/</a></p><h2 id="写在最后"><a href="#写在最后" class="headerlink" title="写在最后"></a>写在最后</h2><p>感谢本人在爬坑过程中翻过的所有文章.</p>]]></content>
      
      
      <categories>
          
          <category> Vue </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Vue </tag>
            
            <tag> 海康威视 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>致2018</title>
      <link href="//road-to-2018"/>
      <url>//road-to-2018</url>
      
        <content type="html"><![CDATA[<p>2017要走,我拦都拦不住!<br>那就让他走吧!<br>先总结一下2017年的计划完成情况!</p><p>至少读两本文学书! (只读了一本!未完成)<br>学一门新技术语言! (没有学新的技术语言!未完成)<br>至少看两本技术书籍!(完成)<br>坚持写技术Blog!(未完成)<br>坚持看技术blog!(完成)<br>坚持使用默默背单词!(完成)<br>坚持锻炼身体!(完成)</p><p>基于以上各计划的完成情况,自我认为不是太理想.各种原因都有,但这不是借口!希望新的一年严格执行计划!</p><p>回顾这一年的点滴,生活和工作都在向着好的方向发展.印证了那句”努力就会有回报!”.我希望自己在新的一年里更加努力!因为我相信明天会美好的!</p><p>以下为新年计划:<br>至少读两本文学书!<br>至少学一门新技术!<br>至少看两本技术书籍!<br>坚持写技术Blog!<br>坚持看技术blog!<br>坚持使用默默背单词!<br>坚持锻炼身体!</p>]]></content>
      
      
      <categories>
          
          <category> 心路 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Rails下sidekiq无法异步发送邮件的问题</title>
      <link href="//rails-tip-sidekiq-async-sendmail"/>
      <url>//rails-tip-sidekiq-async-sendmail</url>
      
        <content type="html"><![CDATA[<p>我在研究sidekiq异步发送邮件的过程中,遇到了sidekiq无法执行队列中的任务的情况.<br>明明sidekiq的”已进入队列”已经包含了发送邮件的任务,并且我非常确定发送邮件的程序是没有问题的.<br>但是无论怎么尝试,邮件都发送不出去.<br>rails console中看到的入队信息是这样的</p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">2.3.0 :015 &gt;</span> OrderMailer.confirm_email(<span class="number">1</span>).deliver_later</span><br><span class="line">Enqueued ActionMailer::DeliveryJob (Job <span class="symbol">ID:</span> a7cda76b-1f01-4f4a-a695-3be1c6bb2640) to Sidekiq(development_mailers) with <span class="symbol">arguments:</span> <span class="string">&quot;OrderMailer&quot;</span>, <span class="string">&quot;confirm_email&quot;</span>, <span class="string">&quot;deliver_now&quot;</span>, <span class="number">1</span></span><br></pre></td></tr></table></figure><p>这里很明确的指出队列的名称是 development_mailers<br>在我没有查明原因之前我的sidekiq.yml配置项是这样的</p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">:concurrency</span>: <span class="number">5</span></span><br><span class="line"><span class="symbol">:pidfile</span>: tmp/pids/sidekiq.pid</span><br><span class="line"></span><br><span class="line"><span class="symbol">:queues</span>:</span><br><span class="line">    - default</span><br><span class="line">    - [myqueue, <span class="number">2</span>]</span><br><span class="line"></span><br><span class="line"><span class="symbol">development:</span></span><br><span class="line">  <span class="symbol">:concurrency</span>: <span class="number">5</span></span><br><span class="line"><span class="symbol">staging:</span></span><br><span class="line">  <span class="symbol">:concurrency</span>: <span class="number">10</span></span><br><span class="line"><span class="symbol">production:</span></span><br><span class="line">  <span class="symbol">:concurrency</span>: <span class="number">20</span></span><br></pre></td></tr></table></figure><p>因为对sidekiq研究不透,当时并没有注意 :queues 这块的含义.<br>在反复google后终于在<a href="https://gist.github.com/maxivak/690e6c353f65a86a4af9">这篇教程</a>里找到了问题的原因所在.<br>其中有这样一句话,让我恍然大悟:<br>“!!! important. You may need to include new queue names in sidekiq.yml file:”<br>我了个大艹!<br>原来是我没有把 development_mailers 队列加到可执行队列中去.<br>添加后的sidekiq.yml配置项是这样的</p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">:concurrency</span>: <span class="number">5</span></span><br><span class="line"><span class="symbol">:pidfile</span>: tmp/pids/sidekiq.pid</span><br><span class="line"></span><br><span class="line"><span class="symbol">:queues</span>:</span><br><span class="line">    - default</span><br><span class="line">    - [myqueue, <span class="number">2</span>]</span><br><span class="line">    - development_mailers</span><br><span class="line"></span><br><span class="line"><span class="symbol">development:</span></span><br><span class="line">  <span class="symbol">:concurrency</span>: <span class="number">5</span></span><br><span class="line"><span class="symbol">staging:</span></span><br><span class="line">  <span class="symbol">:concurrency</span>: <span class="number">10</span></span><br><span class="line"><span class="symbol">production:</span></span><br><span class="line">  <span class="symbol">:concurrency</span>: <span class="number">20</span></span><br></pre></td></tr></table></figure><p>重启sidekiq后,世界美好了!<br>ps:</p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">:queues</span>:</span><br><span class="line">    - default</span><br><span class="line">    - [myqueue, <span class="number">2</span>]</span><br><span class="line">    - development_mailers</span><br></pre></td></tr></table></figure><p>这块的含义是sidekiq可以执行的队列集合,其中 [myqueue, 2] 这里的2 表示被分配到的权重是2.<br>可参考<a href="http://wdxtub.com/2016/07/06/sidekiq-guide/">这里</a></p>]]></content>
      
      
      <categories>
          
          <category> Rails </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Rails </tag>
            
            <tag> sidekiq </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>自定义generator</title>
      <link href="//rails-tip-custom-generator"/>
      <url>//rails-tip-custom-generator</url>
      
        <content type="html"><![CDATA[<p>在Rails项目中,scaffold提供了生成初始代码的强大功能.但任然不能满足日常开发需求.针对部分重复的代码手动ctrl+c,ctrl+v总显得太low.如果能自定义scaffold那就完美了.<br>庆幸的是Rails提供了这种功能.下面以我的开源项目opendoc为例,来自定义scaffold.<br>首先来生成generator.</p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rails generate generator opendoc_scaffold</span><br></pre></td></tr></table></figure><p>上面的命令会生成下面这些文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">create  lib/generators/opendoc_scaffold</span><br><span class="line">create  lib/generators/opendoc_scaffold/opendoc_scaffold_generator.rb</span><br><span class="line">create  lib/generators/opendoc_scaffold/USAGE</span><br><span class="line">create  lib/generators/opendoc_scaffold/templates</span><br><span class="line">invoke  test_unit</span><br><span class="line">create    <span class="built_in">test</span>/lib/generators/opendoc_scaffold_generator_test.rb</span><br></pre></td></tr></table></figure><p>单从名字上看,我们已经大体上知道这些文件是干啥用的了.<br>USAGE是定义一些说明.<br>templates文件夹下放一些模板.<br>opendoc_scaffold_generator.rb是启动文件.内容如下</p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">OpendocScaffoldGenerator</span> &lt; Rails::Generators::<span class="title">NamedBase</span></span></span><br><span class="line">  source_root File.expand_path(<span class="string">&#x27;../templates&#x27;</span>, <span class="keyword">__FILE__</span>) <span class="comment">#指定模板根目录</span></span><br><span class="line">  <span class="comment">#创建一个启动方法,以下代码不是自动生成的</span></span><br><span class="line">  <span class="function"><span class="keyword">def</span> <span class="title">copy_opendoc_scaffold_file</span></span></span><br><span class="line">    <span class="comment">#controller</span></span><br><span class="line">    template <span class="string">&#x27;controller.rb&#x27;</span>, <span class="string">&quot;app/controllers/backend/<span class="subst">#&#123;table_name&#125;</span>_controller.rb&quot;</span></span><br><span class="line">    <span class="comment">#model</span></span><br><span class="line">    template <span class="string">&#x27;model.rb&#x27;</span>, <span class="string">&quot;app/models/<span class="subst">#&#123;singular_table_name&#125;</span>.rb&quot;</span></span><br><span class="line">    <span class="comment">#views</span></span><br><span class="line">    copy_file <span class="string">&#x27;erb/new.html.erb&#x27;</span>, <span class="string">&quot;app/views/backend/<span class="subst">#&#123;file_name&#125;</span>/new.html.erb&quot;</span></span><br><span class="line">    copy_file <span class="string">&#x27;erb/edit.html.erb&#x27;</span>, <span class="string">&quot;app/views/backend/<span class="subst">#&#123;file_name&#125;</span>/edit.html.erb&quot;</span></span><br><span class="line">    template <span class="string">&#x27;erb/index.html.erb&#x27;</span>, <span class="string">&quot;app/views/backend/<span class="subst">#&#123;file_name&#125;</span>/index.html.erb&quot;</span></span><br><span class="line">    template <span class="string">&#x27;erb/_form.html.erb&#x27;</span>, <span class="string">&quot;app/views/backend/<span class="subst">#&#123;file_name&#125;</span>/_form.html.erb&quot;</span></span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure><p>上诉代码中用到的template方法的意思是复制模板到指定的地方.<br>比如自动生成model.下面这些代码是我自定义的model模板.</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">require &#x27;uuidtools&#x27;</span><br><span class="line"></span><br><span class="line">class &lt;%= singular_table_name.capitalize %&gt; &lt; ApplicationRecord</span><br><span class="line">  enum status: [:archived, :active]</span><br><span class="line"></span><br><span class="line">  #validates</span><br><span class="line">  validates :TODO, presence: true, length: &#123; maximum: 50 &#125;</span><br><span class="line">  validates :TODO, numericality: true</span><br><span class="line"></span><br><span class="line">  #scope</span><br><span class="line">  default_scope &#123; where(&quot;status&gt;?&quot;, &lt;%=  singular_table_name.capitalize %&gt;.statuses[:archived]) &#125;</span><br><span class="line">  scope :name_like, -&gt;(name)&#123; where &quot;name like ? &quot;, &quot;%#&#123;sanitize_sql_like(name)&#125;%&quot; &#125;  #防sql注入</span><br><span class="line"></span><br><span class="line">  #假删除</span><br><span class="line">  def self.delete(&lt;%= singular_table_name %&gt;)</span><br><span class="line">    &lt;%= singular_table_name %&gt;.status = :archived</span><br><span class="line">    &lt;%= singular_table_name %&gt;.save</span><br><span class="line">  end</span><br><span class="line"></span><br><span class="line">  #设置属性值</span><br><span class="line">  def self.set_attribute(&lt;%= singular_table_name %&gt;_params)</span><br><span class="line">    &lt;%= singular_table_name %&gt; = &lt;%= singular_table_name.capitalize %&gt;.new(&lt;%= singular_table_name %&gt;_params)</span><br><span class="line">    &lt;%= singular_table_name %&gt;.sid = UUIDTools::UUID.timestamp_create</span><br><span class="line">    &lt;%= singular_table_name %&gt;.status = :active</span><br><span class="line">    &lt;%= singular_table_name %&gt;</span><br><span class="line">  end</span><br><span class="line">end</span><br></pre></td></tr></table></figure><p>上面model模板中用到的 singular_table_name 以及 table_name 等这些方法都在 Rails::Generators::NamedBase <a href="http://api.rubyonrails.org/classes/Rails/Generators/NamedBase.html">这个类下</a>.<br>定义完模板后就可以像使用scaffold一样使用我们的自定义generator了.</p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">rails generate opendoc_scaffold groups</span><br><span class="line">rails generate opendoc_scaffold members</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Ruby On Rails </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Ruby </tag>
            
            <tag> Ruby On Rails </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>friendly_id的使用</title>
      <link href="//rails-tip-friendly-id"/>
      <url>//rails-tip-friendly-id</url>
      
        <content type="html"><![CDATA[<h5 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h5><p>在我们的项目中如果不对url进行模糊处理,通常的url会像下面这样子:<br><a href="http://localhost:3000/backend/groups/1/edit">http://localhost:3000/backend/groups/1/edit</a><br><a href="http://localhost:3000/backend/groups/1/interfaces/1/edit">http://localhost:3000/backend/groups/1/interfaces/1/edit</a><br>这直接暴露了数据库里有多少条记录.为了降低风险,我们需要借助friendly_id这个gem对url进行模糊处理.<br>处理的结果应该是下面这样:<br><a href="http://localhost:3000/backend/groups/0f7094c6-ec6e-11e6-a542-7cd1c3f0bed9/edit">http://localhost:3000/backend/groups/0f7094c6-ec6e-11e6-a542-7cd1c3f0bed9/edit</a><br><a href="http://localhost:3000/backend/groups/0f7094c6-ec6e-11e6-a542-7cd1c3f0bed9/interfaces/48e86a4e-ec6e-11e6-a542-7cd1c3f0bed9/edit">http://localhost:3000/backend/groups/0f7094c6-ec6e-11e6-a542-7cd1c3f0bed9/interfaces/48e86a4e-ec6e-11e6-a542-7cd1c3f0bed9/edit</a></p><h5 id="实现过程"><a href="#实现过程" class="headerlink" title="实现过程"></a>实现过程</h5><p>添加<a href="https://github.com/norman/friendly_id">friendly_id</a>这个gem</p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#Gemfile</span></span><br><span class="line">gem <span class="string">&#x27;friendly_id&#x27;</span>, <span class="string">&#x27;~&gt; 5.1.0&#x27;</span></span><br></pre></td></tr></table></figure><p>按照官方教程进行初始化:</p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">rails g friendly_id</span><br><span class="line">rails <span class="symbol">db:</span>migrate</span><br></pre></td></tr></table></figure><h6 id="先来实现编辑group的url模糊处理"><a href="#先来实现编辑group的url模糊处理" class="headerlink" title="先来实现编辑group的url模糊处理"></a>先来实现编辑group的url模糊处理</h6><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#先为groups表添加slug字段</span></span><br><span class="line">rails g migration add_column_slug_to_groups <span class="symbol">slug:</span><span class="symbol">string:</span>uuiq</span><br><span class="line">rails <span class="symbol">db:</span>migrate</span><br></pre></td></tr></table></figure><p>然后修改group model</p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#app/modles/group.rb</span></span><br><span class="line"><span class="comment">#添加如下代码</span></span><br><span class="line">extend FriendlyId</span><br><span class="line">friendly_id <span class="symbol">:sid</span>, <span class="symbol">use:</span> <span class="symbol">:slugged</span>  <span class="comment">#使用groups中的sid字段作为slug</span></span><br></pre></td></tr></table></figure><p>然后controller中所有查询都通过friendly</p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#app/controllers/backend/groups_controller.rb</span></span><br><span class="line"><span class="comment">#比如:</span></span><br><span class="line"><span class="variable">@group</span> = Group.friendly.find(params[<span class="symbol">:id</span>])</span><br></pre></td></tr></table></figure><p>完成以上操作后即实现了<a href="http://localhost:3000/backend/groups/1/edit%E8%BF%99%E4%B8%AAurl%E7%9A%84%E6%A8%A1%E7%B3%8A%E5%A4%84%E7%90%86">http://localhost:3000/backend/groups/1/edit这个url的模糊处理</a>.<br>查看<a href="http://localhost:3000/backend/groups%E7%9A%84html%E4%BD%A0%E4%BC%9A%E5%8F%91%E7%8E%B0">http://localhost:3000/backend/groups的html你会发现</a> 编辑 对应的href的值已经模糊处理,但是删除的href还是没处理的状态.这个时候修改groups/index.html.erb</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">#app/views/backend/groups/index.html.erb</span><br><span class="line">&lt;%= link_to &#x27;删除&#x27;, backend_group_path(group.id), method: :delete, data: &#123; confirm: &#x27;确定删除吗?&#x27; &#125;, class: &#x27;edit&#x27;  %&gt;</span><br><span class="line">为</span><br><span class="line">&lt;%= link_to &#x27;删除&#x27;, backend_group_path(group.sid), method: :delete, data: &#123; confirm: &#x27;确定删除吗?&#x27; &#125;, class: &#x27;edit&#x27;  %&gt;</span><br></pre></td></tr></table></figure><h6 id="处理interface"><a href="#处理interface" class="headerlink" title="处理interface"></a>处理interface</h6><p>如果现在什么都不做,直接打开interface,你会发现interface的首页无法正常显示数据了.因为用于查询的group_id由数字变成了一长串的字符串.<br>接下来我们修复这个问题.<br>先按照修改group的方式修改interface使用friendly.因为group和interface有has_many关联,所以需要一些特殊处理!</p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#先为interfaces添加groups的sid外键关联</span></span><br><span class="line">rails g migration add_column_group_sid_to_interfaces <span class="symbol">group_sid:</span><span class="symbol">string:</span>&#123;<span class="number">50</span>&#125;</span><br><span class="line">rails <span class="symbol">db:</span>migrate</span><br></pre></td></tr></table></figure><p>然后修改set_attribute方法传入 params[:group_id]</p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#app/models/intreface.rb</span></span><br><span class="line">def <span class="keyword">self</span>.set_attribute(interface_params, group_sid)</span><br><span class="line">    inter = Interface.new(interface_params)</span><br><span class="line">    inter.sid = UUIDTools::UUID.timestamp_create</span><br><span class="line">    inter.group_sid = group_sid</span><br><span class="line">    inter.status = <span class="number">1</span></span><br><span class="line">    inter</span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure><p>这样处理后,新增interface的时候,就会把group的sid插入到interface的group_sid字段中.</p><h6 id="其它"><a href="#其它" class="headerlink" title="其它"></a>其它</h6><p>也可通过重写model的to_param方法模糊处理url,比如</p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">to_param</span></span></span><br><span class="line">    <span class="string">&quot;<span class="subst">#&#123;id&#125;</span>_slfkjsdf&quot;</span></span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure><p>以上就是friendly_id的简单用法.如有不对的地方欢迎指正!</p>]]></content>
      
      
      <categories>
          
          <category> Ruby On Rails </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Ruby </tag>
            
            <tag> Ruby On Rails </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Your Ruby version is *, but your Gemfile specified *</title>
      <link href="//rails-error-but-your-gemfile-specified"/>
      <url>//rails-error-but-your-gemfile-specified</url>
      
        <content type="html"><![CDATA[<p>错误描述:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Your Ruby version is 2.0.0, but your Gemfile specified 2.3.0</span><br></pre></td></tr></table></figure><p>排错过程:</p><p>查看ruby版本</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">✘ ⮀ -&gt; ⮀ openapi ⮀ ruby-2.3.0 ⮀ ⭠ master± ⮀ ruby -v</span><br><span class="line">ruby 2.3.0p0 (2015-12-25 revision 53290) [x86_64-darwin15]</span><br></pre></td></tr></table></figure><p>查看当前使用的ruby版本</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"> -&gt; ⮀ openapi ⮀ ruby-2.3.0 ⮀ ⭠ master± ⮀ rvm list</span><br><span class="line"></span><br><span class="line">rvm rubies</span><br><span class="line"></span><br><span class="line">   ruby-2.0.0-p247 [ x86_64 ]</span><br><span class="line">   ruby-2.2.0 [ x86_64 ]</span><br><span class="line">   ruby-2.2.1 [ x86_64 ]</span><br><span class="line">=&gt; ruby-2.3.0 [ x86_64 ]</span><br><span class="line"> * ruby-2.3.1 [ x86_64 ]</span><br><span class="line"></span><br><span class="line"><span class="comment"># =&gt; - current</span></span><br><span class="line"><span class="comment"># =* - current &amp;&amp; default</span></span><br><span class="line"><span class="comment">#  * - default</span></span><br></pre></td></tr></table></figure><p>错误解决:<br>重新设置当前使用的ruby版本,问题解决!</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rvm use 2.3.0</span><br></pre></td></tr></table></figure><p>问题原因:<br>不明白!为何rvm已经设置了当前使用的ruby版本是2.3.0,但是还要重新设置一下!</p>]]></content>
      
      
      <categories>
          
          <category> Ruby On Rails </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Ruby On Rails </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>致2017</title>
      <link href="//road-to-2017"/>
      <url>//road-to-2017</url>
      
        <content type="html"><![CDATA[<p>2016稍纵即逝!<br>回顾这一年有喜有悲又有无奈!好在过去的都已过去!<br>展望2017,新的朝阳已经升起,怎能不为自己做一个新的新年规划呢!<br>在新的一年里:<br>至少读两本文学书!<br>学一门新技术语言!<br>至少看两本技术书籍!<br>坚持写技术Blog!<br>坚持看技术blog!<br>坚持使用默默背单词!<br>坚持锻炼身体!</p>]]></content>
      
      
      <categories>
          
          <category> 心路 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>《Ruby on Rails 教程》读书笔记</title>
      <link href="//rails-read-railstutorial4th-notes"/>
      <url>//rails-read-railstutorial4th-notes</url>
      
        <content type="html"><![CDATA[<h5 id="编写测试的指导方针"><a href="#编写测试的指导方针" class="headerlink" title="编写测试的指导方针"></a>编写测试的指导方针</h5><p>与应用代码相比,如果测试代码特别简短,倾向于先编写测试;<br>如果对想实现的功能不是特别清楚,倾向于先编写应用代码,然后再编写测试,并改进实现方式;<br>安全是头等大事,保险起见,要为安全相关的功能线编写测试;<br>只要发现一个问题,就编写一个测试重现这种问题,避免回归,然后再编写应用代码修正问题;<br>尽量不为以后可能修改的代码(例如HTML结构的细节)编写测试;<br>重构之前要编写测试,集中测试容易出错的代码.<br>在实际的开发中,根据上述方针,我们一般先编写控制器和模型测试,然后再编写集成测试(测试模型、试视图和控制器在一起时的表现)。如果应用代码很容易出错，或者经常变动（视图就是这样），我们就完全不测试。</p><h5 id="assert-select"><a href="#assert-select" class="headerlink" title="assert_select"></a>assert_select</h5><p>test中的辅助函数,用于检测html中是否有指定的html标签,这个方法有时也叫”选择符”<br>assert_select ‘title’,’Home I Ruby on Rails Tutorial Sample App’ #含义: 检测有没有&lt; title &gt;标签,以及其中的内容是不是 “Home I Ruby on Rails Tutorial Sample App”<br>一些用法:<br>| 代码        | 匹配HTML         |<br>| ————- |:————-:|<br>| assert_select ‘div’      | &lt; div&gt;foobar&lt; /div&gt; |<br>| assert_select ‘div’,’foobar’     | &lt; div&gt;foorbar&lt; /div&gt; |<br>| assert_select ‘div.nav’     | &lt; div class=’nav’&gt;foorbar&lt; /div&gt; |<br>| assert_select ‘div#profile’     | &lt; div id=’profile’&gt;foorbar&lt; /div&gt; |<br>| assert_select ‘div[name=yo]’     | &lt; div name=’yo’&gt;hey&lt; /div&gt; |<br>| assert_select “a[href=?]”,’/‘,count:1    | &lt; div href=’/‘&gt;foo&lt; /div&gt; |<br>| assert_select “a[href=?]”,’/‘,text: “foo”    | &lt; div href=’/‘&gt;foo&lt; /div&gt; |</p><p>选择这样一个input标签的assert_select写法为:<br>&lt; input id=”email” name=”email” type=”hidden” value=”<a href="mailto:&#97;&#64;&#109;&#97;&#105;&#x6c;&#x2e;&#99;&#x6f;&#x6d;">&#97;&#64;&#109;&#97;&#105;&#x6c;&#x2e;&#99;&#x6f;&#x6d;</a>“ / &gt;<br>assert_select “input[name=email][type=hidden][value=?]”, ‘<a href="mailto:&#97;&#x40;&#109;&#97;&#105;&#108;&#x2e;&#99;&#x6f;&#109;">&#97;&#x40;&#109;&#97;&#105;&#108;&#x2e;&#99;&#x6f;&#109;</a>‘</p><h5 id="provide-帮助方法"><a href="#provide-帮助方法" class="headerlink" title="provide 帮助方法"></a>provide 帮助方法</h5><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;% provide(<span class="symbol">:title</span>, <span class="string">&quot;Home&quot;</span>) %&gt;</span><br><span class="line"></span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;title&gt;&lt;%= <span class="keyword">yield</span>(<span class="symbol">:title</span>) %&gt;&lt;<span class="regexp">/title&gt;</span></span><br><span class="line"><span class="regexp">&lt;/head</span>&gt;</span><br><span class="line">&lt;<span class="regexp">/html&gt;</span></span><br></pre></td></tr></table></figure><h5 id="使用git开发的步骤"><a href="#使用git开发的步骤" class="headerlink" title="使用git开发的步骤"></a>使用git开发的步骤</h5><p>有新的需求时,创建一个分支,再分支上进行开发,开发完成后合并到主分支.</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git checkout master #切换到master分支</span><br><span class="line">git merge static-pages #把static-pages分支merge到master分支</span><br></pre></td></tr></table></figure><h5 id="ps-命令"><a href="#ps-命令" class="headerlink" title="ps 命令"></a>ps 命令</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ps aux  <span class="comment">#查看系统进程</span></span><br><span class="line">ps aux | grep spring <span class="comment">#查找spring</span></span><br></pre></td></tr></table></figure><h5 id="Guard的配置"><a href="#Guard的配置" class="headerlink" title="Guard的配置"></a>Guard的配置</h5><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"> <span class="comment"># Defines the matching rules for Guard.</span></span><br><span class="line">guard <span class="symbol">:minitest</span>, <span class="symbol">spring:</span> <span class="literal">true</span>, <span class="symbol">all_on_start:</span> <span class="literal">false</span> <span class="keyword">do</span></span><br><span class="line">    watch(<span class="regexp">%r&#123;^test/(.*)/?(.*)_test\.rb$&#125;</span>)</span><br><span class="line">    watch(<span class="string">&#x27;test/test_helper.rb&#x27;</span>) &#123; <span class="string">&#x27;test&#x27;</span> &#125;</span><br><span class="line">    watch(<span class="string">&#x27;config/routes.rb&#x27;</span>) &#123; integration_tests &#125;</span><br><span class="line">    watch(<span class="regexp">%r&#123;^app/models/(.*?)\.rb$&#125;</span>) <span class="keyword">do</span> <span class="params">|matches|</span></span><br><span class="line">        <span class="string">&quot;test/models/<span class="subst">#&#123;matches[<span class="number">1</span>]&#125;</span>_test.rb&quot;</span></span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">    watch(<span class="regexp">%r&#123;^app/controllers/(.*?)_controller\.rb$&#125;</span>) <span class="keyword">do</span> <span class="params">|matches|</span></span><br><span class="line">        resource_tests(matches[<span class="number">1</span>])</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">    watch(<span class="regexp">%r&#123;^app/views/([^/]*?)/.*\.html\.erb$&#125;</span>) <span class="keyword">do</span> <span class="params">|matches|</span></span><br><span class="line">            [<span class="string">&quot;test/controllers/<span class="subst">#&#123;matches[<span class="number">1</span>]&#125;</span>_controller_test.rb&quot;</span>] +</span><br><span class="line">        integration_tests(matches[<span class="number">1</span>])</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">    watch(<span class="regexp">%r&#123;^app/helpers/(.*?)_helper\.rb$&#125;</span>) <span class="keyword">do</span> <span class="params">|matches|</span></span><br><span class="line">        integration_tests(matches[<span class="number">1</span>])</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">    watch(<span class="string">&#x27;app/views/layouts/application.html.erb&#x27;</span>) <span class="keyword">do</span></span><br><span class="line">            <span class="string">&#x27;test/integration/site_layout_test.rb&#x27;</span></span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">    watch(<span class="string">&#x27;app/helpers/sessions_helper.rb&#x27;</span>) <span class="keyword">do</span></span><br><span class="line">        integration_tests &lt;&lt; <span class="string">&#x27;test/helpers/sessions_helper_test.rb&#x27;</span></span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">    watch(<span class="string">&#x27;app/controllers/sessions_controller.rb&#x27;</span>) <span class="keyword">do</span> [<span class="string">&#x27;test/controllers/sessions_controller_test.rb&#x27;</span>,<span class="string">&#x27;test/integration/users_login_test.rb&#x27;</span>]</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">    watch(<span class="string">&#x27;app/controllers/account_activations_controller.rb&#x27;</span>) <span class="keyword">do</span> <span class="string">&#x27;test/integration/users_signup_test.rb&#x27;</span></span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">    watch(<span class="regexp">%r&#123;app/views/users/*&#125;</span>) <span class="keyword">do</span></span><br><span class="line">            resource_tests(<span class="string">&#x27;users&#x27;</span>) +</span><br><span class="line">    [<span class="string">&#x27;test/integration/microposts_interface_test.rb&#x27;</span>]</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Returns the integration tests corresponding to the given resource.</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">integration_tests</span><span class="params">(resource = <span class="symbol">:all</span>)</span></span> <span class="keyword">if</span> resource == <span class="symbol">:all</span></span><br><span class="line">    Dir[<span class="string">&quot;test/integration/*&quot;</span>] <span class="keyword">else</span></span><br><span class="line">    Dir[<span class="string">&quot;test/integration/<span class="subst">#&#123;resource&#125;</span>_*.rb&quot;</span>] <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Returns the controller tests corresponding to the given resource.</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">controller_test</span><span class="params">(resource)</span></span> <span class="string">&quot;test/controllers/<span class="subst">#&#123;resource&#125;</span>_controller_test.rb&quot;</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line">    <span class="comment"># Returns all tests for the given resource.</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">resource_tests</span><span class="params">(resource)</span></span></span><br><span class="line">    integration_tests(resource) &lt;&lt; controller_test(resource)</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"><span class="comment">#下面这行会让 Guard 使用 Rails 提供的 Spring 服务器减少加载时间,而且启动时不运行整个测试组件。</span></span><br><span class="line">guard <span class="symbol">:minitest</span>, <span class="symbol">spring:</span> <span class="literal">true</span>, <span class="symbol">all_on_start:</span> <span class="literal">false</span> <span class="keyword">do</span></span><br><span class="line"><span class="comment">#使用 Guard 时,为了避免 Spring 和 Git 发生冲突,应该把 spring/ 文件夹加到 .gitignore 文件中,让 Git 忽 略这个文件夹。</span></span><br></pre></td></tr></table></figure><h5 id="bang方法约定"><a href="#bang方法约定" class="headerlink" title="bang方法约定"></a>bang方法约定</h5><p>方法名后加一个感叹号的方法称为”炸弹”(bang)方法.bang方法的含义是 方法处理的结果会改变对象的值.比如:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">2.3.1 :001 &gt; a = %w(2 3 5)</span><br><span class="line"> =&gt; [<span class="string">&quot;2&quot;</span>, <span class="string">&quot;3&quot;</span>, <span class="string">&quot;5&quot;</span>]</span><br><span class="line">2.3.1 :002 &gt; a.sort</span><br><span class="line"> =&gt; [<span class="string">&quot;2&quot;</span>, <span class="string">&quot;3&quot;</span>, <span class="string">&quot;5&quot;</span>]</span><br><span class="line">2.3.1 :003 &gt; a = %w(5 9 2)</span><br><span class="line"> =&gt; [<span class="string">&quot;5&quot;</span>, <span class="string">&quot;9&quot;</span>, <span class="string">&quot;2&quot;</span>]</span><br><span class="line">2.3.1 :004 &gt; a.sort</span><br><span class="line"> =&gt; [<span class="string">&quot;2&quot;</span>, <span class="string">&quot;5&quot;</span>, <span class="string">&quot;9&quot;</span>]</span><br><span class="line">2.3.1 :005 &gt; a</span><br><span class="line"> =&gt; [<span class="string">&quot;5&quot;</span>, <span class="string">&quot;9&quot;</span>, <span class="string">&quot;2&quot;</span>]</span><br><span class="line">2.3.1 :006 &gt; a.sort!</span><br><span class="line"> =&gt; [<span class="string">&quot;2&quot;</span>, <span class="string">&quot;5&quot;</span>, <span class="string">&quot;9&quot;</span>]</span><br><span class="line">2.3.1 :007 &gt; a</span><br><span class="line"> =&gt; [<span class="string">&quot;2&quot;</span>, <span class="string">&quot;5&quot;</span>, <span class="string">&quot;9&quot;</span>]</span><br></pre></td></tr></table></figure><h5 id="数组的-push-lt-lt"><a href="#数组的-push-lt-lt" class="headerlink" title="数组的 push | &lt;&lt;"></a>数组的 push | &lt;&lt;</h5><p>为数组添加元素可以使用 push方法,也可以使用 &lt;&lt; 运算符.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">2.3.1 :008 &gt; a &lt;&lt; <span class="string">&#x27;bbb&#x27;</span> &lt;&lt; <span class="string">&#x27;dddd&#x27;</span></span><br><span class="line"> =&gt; [<span class="string">&quot;2&quot;</span>, <span class="string">&quot;5&quot;</span>, <span class="string">&quot;9&quot;</span>, <span class="string">&quot;bbb&quot;</span>, <span class="string">&quot;dddd&quot;</span>]</span><br></pre></td></tr></table></figure><h5 id="map块变量调用方法简写形式-amp"><a href="#map块变量调用方法简写形式-amp" class="headerlink" title="map块变量调用方法简写形式 &amp;"></a>map块变量调用方法简写形式 &amp;</h5><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">2.3.1 :011 &gt;</span> a.map &#123;<span class="params">|item|</span> item.upcase &#125;</span><br><span class="line"> =&gt; [<span class="string">&quot;2&quot;</span>, <span class="string">&quot;5&quot;</span>, <span class="string">&quot;9&quot;</span>, <span class="string">&quot;BBB&quot;</span>, <span class="string">&quot;DDDD&quot;</span>]</span><br><span class="line"><span class="meta">2.3.1 :012 &gt;</span> a.map(&amp;<span class="symbol">:downcase</span>)</span><br><span class="line"> =&gt; [<span class="string">&quot;2&quot;</span>, <span class="string">&quot;5&quot;</span>, <span class="string">&quot;9&quot;</span>, <span class="string">&quot;bbb&quot;</span>, <span class="string">&quot;dddd&quot;</span>]</span><br></pre></td></tr></table></figure><h5 id="hash"><a href="#hash" class="headerlink" title="hash"></a>hash</h5><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#几种写法 及 多层嵌套后的hash取值方式</span></span><br><span class="line"><span class="meta">2.3.1 :001 &gt;</span> a = &#123; <span class="string">&quot;a1&quot;</span> =&gt; <span class="number">1</span>, <span class="string">&quot;a2&quot;</span> =&gt; <span class="number">2</span>  &#125;</span><br><span class="line"> =&gt; &#123;<span class="string">&quot;a1&quot;</span>=&gt;<span class="number">1</span>, <span class="string">&quot;a2&quot;</span>=&gt;<span class="number">2</span>&#125;</span><br><span class="line"><span class="meta">2.3.1 :002 &gt;</span> b = &#123; <span class="symbol">:b1</span> =&gt; <span class="number">1</span>, <span class="symbol">:b2</span> =&gt; <span class="number">2</span> &#125;</span><br><span class="line"> =&gt; &#123;<span class="symbol">:b1=&gt;</span><span class="number">1</span>, <span class="symbol">:b2=&gt;</span><span class="number">2</span>&#125;</span><br><span class="line"><span class="meta">2.3.1 :003 &gt;</span> c = &#123; <span class="symbol">c1:</span> <span class="number">1</span>, <span class="symbol">c2:</span> <span class="number">2</span> &#125;</span><br><span class="line"> =&gt; &#123;<span class="symbol">:c1=&gt;</span><span class="number">1</span>, <span class="symbol">:c2=&gt;</span><span class="number">2</span>&#125;</span><br><span class="line"></span><br><span class="line"> <span class="comment">#多层嵌套后的hash取值</span></span><br><span class="line"> <span class="number">2.3</span>.<span class="number">1</span> <span class="symbol">:</span><span class="number">004</span> &gt; d = &#123; <span class="symbol">d1:</span> &#123; <span class="symbol">dd1:</span> &#123; <span class="symbol">ddd1:</span> <span class="number">6</span>, <span class="symbol">ddd2:</span> <span class="number">7</span>&#125;, <span class="symbol">dd2:</span> <span class="number">4</span> &#125;, <span class="symbol">d2:</span> <span class="number">3</span> &#125;</span><br><span class="line"> =&gt; &#123;<span class="symbol">:d1=&gt;</span>&#123;<span class="symbol">:dd1=&gt;</span>&#123;<span class="symbol">:ddd1=&gt;</span><span class="number">6</span>, <span class="symbol">:ddd2=&gt;</span><span class="number">7</span>&#125;, <span class="symbol">:dd2=&gt;</span><span class="number">4</span>&#125;, <span class="symbol">:d2=&gt;</span><span class="number">3</span>&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">2.3.1 :011 &gt;</span> d[<span class="symbol">:d1</span>]</span><br><span class="line"> =&gt; &#123;<span class="symbol">:dd1=&gt;</span>&#123;<span class="symbol">:ddd1=&gt;</span><span class="number">6</span>, <span class="symbol">:ddd2=&gt;</span><span class="number">7</span>&#125;, <span class="symbol">:dd2=&gt;</span><span class="number">4</span>&#125;</span><br><span class="line"><span class="meta">2.3.1 :012 &gt;</span> d[<span class="symbol">:d1</span>][<span class="symbol">:dd1</span>]</span><br><span class="line"> =&gt; &#123;<span class="symbol">:ddd1=&gt;</span><span class="number">6</span>, <span class="symbol">:ddd2=&gt;</span><span class="number">7</span>&#125;</span><br><span class="line"><span class="meta">2.3.1 :013 &gt;</span> d[<span class="symbol">:d1</span>][<span class="symbol">:dd1</span>][<span class="symbol">:ddd2</span>]</span><br><span class="line"> =&gt; <span class="number">7</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#hash的merge方法</span></span><br><span class="line"><span class="meta">2.3.1 :018 &gt;</span> a</span><br><span class="line"> =&gt; &#123;<span class="string">&quot;a1&quot;</span>=&gt;<span class="number">1</span>, <span class="string">&quot;a2&quot;</span>=&gt;<span class="number">2</span>&#125;</span><br><span class="line"><span class="meta">2.3.1 :019 &gt;</span> b</span><br><span class="line"> =&gt; &#123;<span class="symbol">:b1=&gt;</span><span class="number">1</span>, <span class="symbol">:b2=&gt;</span><span class="number">2</span>&#125;</span><br><span class="line"><span class="meta">2.3.1 :020 &gt;</span> a.merge b</span><br><span class="line"> =&gt; &#123;<span class="string">&quot;a1&quot;</span>=&gt;<span class="number">1</span>, <span class="string">&quot;a2&quot;</span>=&gt;<span class="number">2</span>, <span class="symbol">:b1=&gt;</span><span class="number">1</span>, <span class="symbol">:b2=&gt;</span><span class="number">2</span>&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">#函数调用时,如果哈希是最后一个参数,可以省略花括号.比如:</span></span><br><span class="line">stylesheet_link_tag <span class="string">&#x27;application&#x27;</span>, &#123; <span class="symbol">media:</span> <span class="string">&#x27;all&#x27;</span>, <span class="string">&#x27;data-turbolinks-track&#x27;</span>: <span class="string">&#x27;reload&#x27;</span>&#125;</span><br><span class="line">stylesheet_link_tag <span class="string">&#x27;application&#x27;</span>, <span class="symbol">media:</span> <span class="string">&#x27;all&#x27;</span>, <span class="string">&#x27;data-turbolinks-track&#x27;</span>: <span class="string">&#x27;reload&#x27;</span></span><br></pre></td></tr></table></figure><h5 id="字符串、数组、hash、Range的声明"><a href="#字符串、数组、hash、Range的声明" class="headerlink" title="字符串、数组、hash、Range的声明"></a>字符串、数组、hash、Range的声明</h5><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">a = <span class="string">&#x27;&#x27;</span></span><br><span class="line">a = String.new</span><br><span class="line">a = String.new(<span class="string">&#x27;dd&#x27;</span>)</span><br><span class="line">b = []</span><br><span class="line">b = Array.new</span><br><span class="line">c = &#123;&#125;</span><br><span class="line">c = Hash.new</span><br><span class="line">d = Range.new(<span class="number">0</span>,<span class="number">2</span>)  <span class="comment">#声明一个范围</span></span><br></pre></td></tr></table></figure><h5 id="预处理引擎的执行顺序"><a href="#预处理引擎的执行顺序" class="headerlink" title="预处理引擎的执行顺序"></a>预处理引擎的执行顺序</h5><p>从右向左执行<br>foobar.js.erb.coffee #先通过coffee处理,再通过ruby处理</p><h5 id="路由的-path-和-url"><a href="#路由的-path-和-url" class="headerlink" title="路由的 _path 和 _url"></a>路由的 _path 和 _url</h5><p>root_path -&gt; ‘/‘<br>root_url -&gt; ‘<a href="http://www.example.com/&#39;">http://www.example.com/&#39;</a><br>约定 只有重定向使用_url形式,其余都使用_path形式.(因为HTTP标准严格要求重定向的URL必须完整.不过在大多数浏览器中,两种形式都可以正常使用)</p><h5 id="测试方法-assert-template"><a href="#测试方法-assert-template" class="headerlink" title="测试方法 assert_template"></a>测试方法 assert_template</h5><p>检查路由是否使用正确的视图渲染<br>get root_path<br>assert_template ‘static_pages/home’<br>#请求root路由,看root路由是否使用了static_pages下的home视图渲染.</p><h5 id="沙盒模式"><a href="#沙盒模式" class="headerlink" title="沙盒模式"></a>沙盒模式</h5><p>rails console –sandbox<br>在沙盒模式下做的所有修改都不会影响实际数据.<br>在控制台下可以使用 reload方法重新加载环境</p><h5 id="ActiveRecord的一些方法"><a href="#ActiveRecord的一些方法" class="headerlink" title="ActiveRecord的一些方法"></a>ActiveRecord的一些方法</h5><p>user.new #在内存中创建对象<br>user.save #保存到数据库,save方法会返回true和false<br>以上两步和<br>user.create #create方法会返回对象的实例<br>等效.<br>user.valid? #只检测对象是否有效<br>user.destroy #create方法的逆操作,也会返回对象的实例.(销毁的对象还在内存中)<br>user.update_attributes(name: ‘The Dude’, email: ‘<a href="mailto:&#100;&#117;&#x64;&#101;&#64;&#97;&#x62;&#x69;&#x64;&#101;&#115;&#x2e;&#111;&#114;&#x67;">&#100;&#117;&#x64;&#101;&#64;&#97;&#x62;&#x69;&#x64;&#101;&#115;&#x2e;&#111;&#114;&#x67;</a>‘) #更新name和email属性,返回ture和false.该方法无法跳过验证<br>user.update_attribute(:name, ‘El Duderino’) #更新单个属性,该方法可以跳过验证<br>User.find(params[:id]).destroy #可以再查询到的结果上直接调用destroy方法删除对象,物理删除…</p><h5 id="Model的验证"><a href="#Model的验证" class="headerlink" title="Model的验证"></a>Model的验证</h5><p>validate :email, format: { with: /<regular expression>/ } #validate可以有format参数,提供正则验证</p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">VALID_EMAIL_REGEX = <span class="regexp">/\A[\w+\-.]+@[a-z\d\-.]+\.[a-z]+\z/i</span></span><br><span class="line">validates <span class="symbol">:email</span>, <span class="symbol">presence:</span> <span class="literal">true</span>, <span class="symbol">length:</span> &#123;<span class="symbol">maximum:</span> <span class="number">255</span> &#125;, <span class="symbol">format:</span> &#123;<span class="symbol">with:</span> VALID_EMAIL_REGEX &#125;</span><br></pre></td></tr></table></figure><h5 id="正则表达式-i-g-m-gi-ig-区别"><a href="#正则表达式-i-g-m-gi-ig-区别" class="headerlink" title="正则表达式 /i,/g,/m,/gi,/ig 区别"></a>正则表达式 /i,/g,/m,/gi,/ig 区别</h5><p>/i (忽略大小写)<br>/g (全文查找出现的所有匹配字符)<br>/m (多行查找)<br>/gi(全文查找、忽略大小写)<br>/ig(全文查找、忽略大小写)</p><h5 id="产生7位随机的字符"><a href="#产生7位随机的字符" class="headerlink" title="产生7位随机的字符"></a>产生7位随机的字符</h5><p>(‘a’..’z’).to_a.shuffle[0..7].join</p><h5 id="dup方法复制一个对象"><a href="#dup方法复制一个对象" class="headerlink" title="dup方法复制一个对象"></a>dup方法复制一个对象</h5><p>duplicate_user = @user.dup</p><h5 id="model的-before-save-方法"><a href="#model的-before-save-方法" class="headerlink" title="model的 before_save 方法"></a>model的 before_save 方法</h5><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">User</span> &lt; ApplicationRecord</span></span><br><span class="line">    before_save &#123; <span class="keyword">self</span>.email = email.downcase &#125; <span class="comment">#在执行save方法前,先把email转换为小写</span></span><br><span class="line">    validates <span class="symbol">:name</span>, <span class="symbol">presence:</span> <span class="literal">true</span>, <span class="symbol">length:</span> &#123; <span class="symbol">maximum:</span> <span class="number">50</span> &#125;</span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure><h5 id="has-secure-password-方法"><a href="#has-secure-password-方法" class="headerlink" title="has_secure_password 方法"></a>has_secure_password 方法</h5><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">calss User &lt; ApplicationRecord</span><br><span class="line">    has_secure_password</span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure><p>在模型中调用了该方法后,会自动添加以下功能:<br>在数据库中的password_digest列存储安全的密码哈希值;<br>获得一对虚拟属性,password和password_confirmation,而且创建用户对象时会执行存在性验证和匹配验证;<br>获得authenticate方法,如果密码正确,返回对应的用户对象,否则返回false;<br>这个方法需要表有 password_digest字段.</p><h5 id="可以根据环境的不同展示debug信息"><a href="#可以根据环境的不同展示debug信息" class="headerlink" title="可以根据环境的不同展示debug信息"></a>可以根据环境的不同展示debug信息</h5><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">&lt;% debug(params) if Rails.env.development?  % &gt;</span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><h5 id="在指定的环境下执行命令"><a href="#在指定的环境下执行命令" class="headerlink" title="在指定的环境下执行命令"></a>在指定的环境下执行命令</h5><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">rails console test <span class="comment">#在test环境下启用rails console</span></span><br><span class="line">rails server --enviroment production <span class="comment">#在production环境下运行服务</span></span><br><span class="line">rails <span class="symbol">db:</span>migrate RAILS_ENV=production <span class="comment">#迁移production环境数据库</span></span><br><span class="line"><span class="comment">#控制台,服务器,迁移命令 这几个命令中都可以使用RAILS_ENV=&lt;env&gt;,比如: RAILS_ENV=production rails server</span></span><br></pre></td></tr></table></figure><h5 id="健壮参数"><a href="#健壮参数" class="headerlink" title="健壮参数"></a>健壮参数</h5><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">params.<span class="keyword">require</span>(<span class="symbol">:user</span>).permit(<span class="symbol">:name</span>,<span class="symbol">:email</span>,<span class="symbol">:password</span>,<span class="symbol">:password_confirmation</span>)</span><br></pre></td></tr></table></figure><h5 id="model的erros对象"><a href="#model的erros对象" class="headerlink" title="model的erros对象"></a>model的erros对象</h5><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">user.errors.full_messages <span class="comment">#查看所有错误信息,是一个数组</span></span><br><span class="line">user.errors.empty? <span class="comment">#判断是否存在错误信息</span></span><br><span class="line">user.errors.any?  <span class="comment">#判断是否存在错误信息,可以empty?含义相反</span></span><br></pre></td></tr></table></figure><h5 id="helper的pluralize方法"><a href="#helper的pluralize方法" class="headerlink" title="helper的pluralize方法"></a>helper的pluralize方法</h5><p>该方法返回正确的单复数形式</p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">helper.pluralize(<span class="number">1</span>,<span class="string">&quot;error&quot;</span>) <span class="comment"># 1 error</span></span><br><span class="line">helper.pluralize(<span class="number">2</span>,<span class="string">&quot;error&quot;</span>) <span class="comment"># 2 errors</span></span><br></pre></td></tr></table></figure><h5 id="redirect-to"><a href="#redirect-to" class="headerlink" title="redirect_to"></a>redirect_to</h5><p>redirect_to @user<br>redirect_to user_url(@user)<br>以上两种形式的含义相同</p><h5 id="或等运算符"><a href="#或等运算符" class="headerlink" title="||= 或等运算符"></a>||= 或等运算符</h5><p>a ||= b<br>相当于 a = a || b<br>当a为真时返回a的值,当a为假时返回b的值</p><h5 id="if-a-b"><a href="#if-a-b" class="headerlink" title="if(a=b)"></a>if(a=b)</h5><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">a = <span class="number">1</span></span><br><span class="line">b = <span class="literal">nil</span></span><br><span class="line"><span class="keyword">if</span> a = b</span><br><span class="line">  puts a</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">  puts <span class="number">3</span></span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure><p>上面的代码意思是当b存在时,把b赋给a,然后打印a,当b不存在时,打印3</p><h5 id="activerecord的new-record-方法"><a href="#activerecord的new-record-方法" class="headerlink" title="activerecord的new_record?方法"></a>activerecord的new_record?方法</h5><p>User.new.new_record? # true<br>User.first.new_record? #false<br>用于检测对象是新创建的还是存在于数据库中.</p><h5 id="model的validates允许为空的验证"><a href="#model的validates允许为空的验证" class="headerlink" title="model的validates允许为空的验证"></a>model的validates允许为空的验证</h5><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">validates <span class="symbol">:password</span>, <span class="symbol">presence:</span> <span class="literal">true</span>, <span class="symbol">length:</span> &#123;<span class="symbol">minimum:</span> <span class="number">6</span>&#125;, <span class="symbol">allow_nil:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure><h5 id="权限验证使用过滤器实现"><a href="#权限验证使用过滤器实现" class="headerlink" title="权限验证使用过滤器实现"></a>权限验证使用过滤器实现</h5><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ApplicationController</span> &lt; ApplicationController</span></span><br><span class="line">    before_action <span class="symbol">:logged_in_user</span>, <span class="symbol">only:</span> [<span class="symbol">:edit</span>, <span class="symbol">:update</span>]</span><br><span class="line">    before_action <span class="symbol">:correct_user</span>, <span class="symbol">only:</span> [<span class="symbol">:edit</span>, <span class="symbol">:update</span>]</span><br><span class="line"></span><br><span class="line">    private</span><br><span class="line">        <span class="function"><span class="keyword">def</span> <span class="title">loggent_in_user</span></span></span><br><span class="line">            <span class="keyword">unless</span> logged_in?</span><br><span class="line">                flash[<span class="symbol">:danger</span>] = <span class="string">&#x27;.....&#x27;</span></span><br><span class="line">                redirect_to login_url</span><br><span class="line">            <span class="keyword">end</span></span><br><span class="line">        <span class="keyword">end</span></span><br><span class="line">        <span class="function"><span class="keyword">def</span> <span class="title">correct_user</span></span></span><br><span class="line">            <span class="variable">@user</span> = User.find(params[<span class="symbol">:id</span>])</span><br><span class="line">            redirect_to(root_url) <span class="keyword">unless</span> <span class="variable">@user</span> == current_user</span><br><span class="line">        <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure><p>删除用户的链接只有管理员才能看到</p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;% <span class="keyword">if</span> current_user.admin? &amp;&amp; !current_user?(user) % &gt;</span><br><span class="line">&lt;% link_to <span class="string">&quot;delete&quot;</span>, user, <span class="symbol">method:</span> <span class="symbol">:delete</span>, <span class="symbol">data:</span> &#123;<span class="symbol">confirm:</span> <span class="string">&#x27;You sure?&#x27;</span>&#125; % &gt;</span><br><span class="line">&lt;% <span class="keyword">end</span> % &gt;</span><br></pre></td></tr></table></figure><p>为了限制只有管理员才能删除用户信息,需要这样做</p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">UserController</span> &lt; ApplicationController</span></span><br><span class="line">    before_action <span class="symbol">:admin_user</span>, <span class="symbol">only:</span> <span class="symbol">:destroy</span></span><br><span class="line"></span><br><span class="line">    private</span><br><span class="line">        <span class="function"><span class="keyword">def</span> <span class="title">admin_user</span></span></span><br><span class="line">            redirect_to(root_url) <span class="keyword">unless</span> current_user.admin?</span><br><span class="line">        <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure><p>在数据保存,创建之前都有相应的过滤器<br>比如: before_create, before_save 等</p><h5 id="send方法"><a href="#send方法" class="headerlink" title="send方法"></a>send方法</h5><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">2.3.1 :004 &gt;</span> a = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>]</span><br><span class="line"> =&gt; [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>]</span><br><span class="line"><span class="meta">2.3.1 :005 &gt;</span> a.length</span><br><span class="line"> =&gt; <span class="number">3</span></span><br><span class="line"><span class="meta">2.3.1 :006 &gt;</span> a.send(<span class="symbol">:length</span>)</span><br><span class="line"> =&gt; <span class="number">3</span></span><br><span class="line"><span class="meta">2.3.1 :007 &gt;</span> a.send(<span class="string">&quot;length&quot;</span>)</span><br><span class="line"> =&gt; <span class="number">3</span></span><br></pre></td></tr></table></figure><p>可见send方法可以在对象上调用以字符串或符号方式传入的参数的方法</p><h5 id="flash"><a href="#flash" class="headerlink" title="flash"></a>flash</h5><p>falsh[:info] = “111” #用在redirect_to中,数据存在session中<br>falsh.now[:danger] = “111” #用在render中,数据存在request中</p><h5 id="has-many-和-belongs-to"><a href="#has-many-和-belongs-to" class="headerlink" title="has_many 和 belongs_to"></a>has_many 和 belongs_to</h5><p>当micropost模型和 user模型进行 belongs_to/has_many关联后会获得这些方法:<br>micropost.user #返回与微博关联的用户对象<br>user.microposts #返回用户发布的所有微博<br>user.microposts.create(arg) #创建一篇user发布的微博<br>user.microposts.create!(arg) #创建一篇user发布的微博(失败时抛出异常)<br>user.microposts.build(arg) #返回一个user发布的新微博对象<br>user.microposts.find_by(id:1) #查找user发布的一篇微博,而且微博的id为1</p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Micropost</span> &lt; ApplicationRecord</span></span><br><span class="line">    belongs_to <span class="symbol">:user</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">User</span> &lt; ApplicationRecord</span></span><br><span class="line">    has_many <span class="symbol">:microposts</span>, <span class="symbol">dependent:</span> <span class="symbol">:destroy</span>  <span class="comment">#dependent: :destroy 的作用是再用户被删除的时候,把这个用户发布的微博也删除.</span></span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure><h5 id="scope"><a href="#scope" class="headerlink" title="scope"></a>scope</h5><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Micropost</span> &lt; ApplicationRecord</span></span><br><span class="line">    belongs_to <span class="symbol">:user</span></span><br><span class="line">    default_scope -&gt; &#123; order(<span class="symbol">create_ar:</span> <span class="symbol">:desc</span>) &#125; <span class="comment">#默认的scope</span></span><br><span class="line">    scope <span class="symbol">:tmp</span>, -&gt; &#123;  &#125;</span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure><h5 id="Proc-procedure-匿名函数"><a href="#Proc-procedure-匿名函数" class="headerlink" title="Proc(procedure) 匿名函数"></a>Proc(procedure) 匿名函数</h5><p>-&gt; 接受一个代码块,返回一个Proc,然后再这个Proc上调用call方法执行其中代码.</p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">2.3.1 :002 &gt;</span> a = -&gt; &#123; puts <span class="string">&#x27;b&#x27;</span> &#125;</span><br><span class="line"> =&gt; #&lt;Proc:0x007f9f338bfc98@(irb):2 (lambda)&gt;</span><br><span class="line"><span class="meta">2.3.1 :003 &gt;</span> a.call</span><br><span class="line">b</span><br><span class="line"> =&gt; nil</span><br><span class="line"><span class="meta">2.3.1 :004 &gt;</span> -&gt; &#123; puts <span class="string">&#x27;c&#x27;</span> &#125;.call</span><br><span class="line">c</span><br><span class="line"> =&gt; nil</span><br></pre></td></tr></table></figure><h4 id="render传递参数"><a href="#render传递参数" class="headerlink" title="render传递参数"></a>render传递参数</h4><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;%= for_for(<span class="variable">@micropost</span>) <span class="keyword">do</span> <span class="params">|f|</span>  % &gt;</span><br><span class="line">&lt;%= render <span class="string">&#x27;shared/error_mesages&#x27;</span>, <span class="symbol">object:</span> f.object % &gt;</span><br><span class="line">&lt;% <span class="keyword">end</span> % &gt;</span><br><span class="line"></span><br><span class="line"><span class="comment">#app/views/shared/_error_messages.html</span></span><br><span class="line">&lt;% <span class="keyword">if</span> object.errors.any? % &gt;</span><br><span class="line">    &lt;div id=<span class="string">&quot;error&quot;</span> &gt;<span class="number">1</span> &lt;\/ div &gt;</span><br><span class="line">&lt; % <span class="keyword">end</span> % &gt;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Ruby On Rails </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Ruby </tag>
            
            <tag> Ruby On Rails </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo Error:Module did not self-register</title>
      <link href="//hexo-error-module-did-not-self-register"/>
      <url>//hexo-error-module-did-not-self-register</url>
      
        <content type="html"><![CDATA[<p>在启动hexo服务时遇到该问题.</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">hexo s</span><br><span class="line">[Error: Module did not self-register.]</span><br><span class="line">&#123; [Error: Cannot find module &#x27;./build/default/DTraceProviderBindings&#x27;] code:&#x27;MODULE<span class="emphasis">_NOT_</span>FOUND&#x27; &#125;</span><br><span class="line">&#123; [Error: Cannot find module &#x27;./build/Debug/DTraceProviderBindings&#x27;] code:&#x27;MODULE<span class="emphasis">_NOT_</span>FOUND&#x27; &#125;</span><br><span class="line">INFO  Start processing</span><br><span class="line">INFO  Hexo is running at http://localhost:4000/. Press Ctrl+C to stop.</span><br></pre></td></tr></table></figure><p>分析原因,应该是昨天安装了iTerm后使用了zsh,然后好多命令都找不到了…然后各种幺蛾子问题都出来了!!!<br>这是因为mac默认使用的是bash,现在设置成zsh后,好多命令都不存在了…最简单的方式是就重装一次!!!!<br>我再尝试 升级 nvm</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -o- https://raw.githubusercontent.com/creationix/nvm/v0.31.4/install.sh | bash</span><br></pre></td></tr></table></figure><p>然后重装 node和hexo后解决了该问题</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">nvm install node</span><br><span class="line">npm install hexo --no-optional</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Ruby Error:&quot;in `match&#39;:incompatible encoding regexp match (UTF-8 regexp with ASCII-8BIT string) (Encoding::CompatibilityError)&quot;</title>
      <link href="//ruby-error-encoding-compatibility-error"/>
      <url>//ruby-error-encoding-compatibility-error</url>
      
        <content type="html"><![CDATA[<p>我在抓取一个中文网页时遇到该问题.<br>出现该问题的原因是字符编码不一致导致的.查看获取到的网页内容编码是 ASCII-8BIT的,所以需要强制转换为UTF-8.</p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">code_html = HTTP.get(<span class="string">&#x27;http://www.stats.gov.cn/tjsj/tjbz/xzqhdm/201401/t20140116_501070.html&#x27;</span>).to_s</span><br><span class="line">puts code_html.encoding.name</span><br><span class="line">tmp_result = code_html.force_encoding(<span class="string">&quot;UTF-8&quot;</span>).scan(<span class="regexp">/\d&#123;6&#125;&amp;nbsp;&amp;nbsp;&amp;nbsp; [\u4e00-\u9fa5]+/</span>)</span><br><span class="line">puts tmp_result</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Ruby </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Ruby </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用BDD方式开发一个gem</title>
      <link href="//ruby-tdd-development-gem"/>
      <url>//ruby-tdd-development-gem</url>
      
        <content type="html"><![CDATA[<p>你应该遇到过通过区县查省份,通过区县查邮编的时候.一般我们会打开浏览器google一下.但是,我不想,我想敲一行代码就能迅速的查到,谁让咱是程序员呢😊.这就是我这篇记录的产生原因.<br><a href="https://github.com/dodoliu/china_district_code">源码地址</a><br>本文将记录采用行为驱动开发(BDD)的方式,创建一个gem到发布的真实过程.<br>安装bundler</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gem install bundler</span><br></pre></td></tr></table></figure><p>创建gem项目(项目名称为 china_district_code)</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bundler gem china_district_code</span><br></pre></td></tr></table></figure><p>生成的目录结构应该是这样</p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">china_district_code</span><br><span class="line">- bin</span><br><span class="line">- lib</span><br><span class="line">.gitignore</span><br><span class="line">china_district_code.gemspec</span><br><span class="line">Gemfile</span><br><span class="line">Rakefile</span><br><span class="line">README.md</span><br></pre></td></tr></table></figure><p>引入测试gem.打开gemfile文件,输入以下内容后运行命令: bundle install</p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">source <span class="string">&#x27;https://gems.ruby-china.org&#x27;</span></span><br><span class="line"></span><br><span class="line">gem <span class="string">&#x27;rspec&#x27;</span></span><br><span class="line">gem <span class="string">&#x27;rspec-core&#x27;</span></span><br><span class="line">gem <span class="string">&#x27;guard-rspec&#x27;</span> <span class="comment">#自动化测试插件</span></span><br></pre></td></tr></table></figure><p>生成配置文件</p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rspec --init <span class="comment">#初始化rspec</span></span><br></pre></td></tr></table></figure><p>执行完成后,目录结构应该像这样子</p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">china_district_code</span><br><span class="line">- bin</span><br><span class="line">- lib</span><br><span class="line">- spec</span><br><span class="line">- - spec_helper.rb</span><br><span class="line">.gitignore</span><br><span class="line">.rspec</span><br><span class="line">china_district_code.gemspec</span><br><span class="line">Gemfile</span><br><span class="line">Rakefile</span><br><span class="line">README.md</span><br></pre></td></tr></table></figure><p>然后生成我们的测试文件</p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">touch spec/china_district_code_spec.rb</span><br></pre></td></tr></table></figure><p>生成自动化测试配置文件,下面的命令执行完成后,文件夹内会多出一个Guardfile文件(自动化测试Guard的配置文件,默认不用修改).</p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">guard init rspec</span><br></pre></td></tr></table></figure><p>然后可以启动我们的自动化测试,监控文件变化.</p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bundle exec guard</span><br></pre></td></tr></table></figure><p>关于自动化测试插件 guard的用法可以参考<br><a href="https://github.com/guard/guard#readme">Guard的Github地址</a><br><a href="https://github.com/guard/guard/wiki/Command-line-options-for-Guard">命令说明地址</a><br>以上的基础工作完成,下面开始写我们的行为测试.<br>打开china_district_code_spec.rb,输入以下内容(请无视我的中国味英语o(╯□╰)o)</p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">require</span> <span class="string">&#x27;spec_helper&#x27;</span></span><br><span class="line"></span><br><span class="line">describe <span class="string">&quot;China district code&quot;</span> <span class="keyword">do</span></span><br><span class="line">  context <span class="string">&quot;district&quot;</span> <span class="keyword">do</span></span><br><span class="line">    it <span class="string">&quot;get province,city,area info&quot;</span></span><br><span class="line">    it <span class="string">&quot;find citys by province&quot;</span></span><br><span class="line">    it <span class="string">&quot;find areas by city&quot;</span></span><br><span class="line">    it <span class="string">&quot;find province by city&quot;</span></span><br><span class="line">    it <span class="string">&quot;find city,province by area&quot;</span></span><br><span class="line">    it <span class="string">&quot;find area by district code&quot;</span></span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">  context <span class="string">&quot;post code&quot;</span> <span class="keyword">do</span></span><br><span class="line">    it <span class="string">&quot;find post code  by district code&quot;</span></span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure><p>保存后,你会发现Guard已经自动运行了测试,并给出提示,所有的测试都是pending状态.<br>shell中应该像这样:</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">00:13:39 - INFO - Running: spec/china<span class="emphasis">_district_</span>code<span class="emphasis">_spec.rb</span></span><br><span class="line"><span class="emphasis"><span class="strong">****</span><span class="strong">**<span class="emphasis">*</span></span></span></span><br><span class="line"><span class="emphasis"><span class="strong"><span class="emphasis"></span></span></span></span><br><span class="line"><span class="emphasis"><span class="strong"><span class="emphasis">Pending: (Failures listed here are expected and do not affect your suite&#x27;s status)</span></span></span></span><br><span class="line"><span class="emphasis"><span class="strong"><span class="emphasis"></span></span></span></span><br><span class="line"><span class="emphasis"><span class="strong"><span class="emphasis">  1) China district code district get province,city,area info</span></span></span></span><br><span class="line"><span class="emphasis"><span class="strong"><span class="emphasis">     # Not yet implemented</span></span></span></span><br><span class="line"><span class="emphasis"><span class="strong"><span class="emphasis">     # ./spec/china_district_code_spec.rb:5</span></span></span></span><br><span class="line"><span class="emphasis"><span class="strong"><span class="emphasis"></span></span></span></span><br><span class="line"><span class="emphasis"><span class="strong"><span class="emphasis">  2) China district code district find citys by province</span></span></span></span><br><span class="line"><span class="emphasis"><span class="strong"><span class="emphasis">     # Not yet implemented</span></span></span></span><br><span class="line"><span class="emphasis"><span class="strong"><span class="emphasis">     # ./spec/china_district_code_spec.rb:6</span></span></span></span><br><span class="line"><span class="emphasis"><span class="strong"><span class="emphasis"></span></span></span></span><br><span class="line"><span class="emphasis"><span class="strong"><span class="emphasis">  3) China district code district find areas by city</span></span></span></span><br><span class="line"><span class="emphasis"><span class="strong"><span class="emphasis">     # Not yet implemented</span></span></span></span><br><span class="line"><span class="emphasis"><span class="strong"><span class="emphasis">     # ./spec/china_district_code_spec.rb:7</span></span></span></span><br><span class="line"><span class="emphasis"><span class="strong"><span class="emphasis"></span></span></span></span><br><span class="line"><span class="emphasis"><span class="strong"><span class="emphasis">  4) China district code district find province by city</span></span></span></span><br><span class="line"><span class="emphasis"><span class="strong"><span class="emphasis">     # Not yet implemented</span></span></span></span><br><span class="line"><span class="emphasis"><span class="strong"><span class="emphasis">     # ./spec/china_district_code_spec.rb:8</span></span></span></span><br><span class="line"><span class="emphasis"><span class="strong"><span class="emphasis"></span></span></span></span><br><span class="line"><span class="emphasis"><span class="strong"><span class="emphasis">  5) China district code district find city,province by area</span></span></span></span><br><span class="line"><span class="emphasis"><span class="strong"><span class="emphasis">     # Not yet implemented</span></span></span></span><br><span class="line"><span class="emphasis"><span class="strong"><span class="emphasis">     # ./spec/china_district_code_spec.rb:9</span></span></span></span><br><span class="line"><span class="emphasis"><span class="strong"><span class="emphasis"></span></span></span></span><br><span class="line"><span class="emphasis"><span class="strong"><span class="emphasis">  6) China district code district find area by district code</span></span></span></span><br><span class="line"><span class="emphasis"><span class="strong"><span class="emphasis">     # Not yet implemented</span></span></span></span><br><span class="line"><span class="emphasis"><span class="strong"><span class="emphasis">     # ./spec/china_district_code_spec.rb:10</span></span></span></span><br><span class="line"><span class="emphasis"><span class="strong"><span class="emphasis"></span></span></span></span><br><span class="line"><span class="emphasis"><span class="strong"><span class="emphasis">  7) China district code post code find post code  by district code</span></span></span></span><br><span class="line"><span class="emphasis"><span class="strong"><span class="emphasis">     # Not yet implemented</span></span></span></span><br><span class="line"><span class="emphasis"><span class="strong"><span class="emphasis">     # ./spec/china_district_code_spec.rb:14</span></span></span></span><br><span class="line"><span class="emphasis"><span class="strong"><span class="emphasis"></span></span></span></span><br><span class="line"><span class="emphasis"><span class="strong"><span class="emphasis"></span></span></span></span><br><span class="line"><span class="emphasis"><span class="strong"><span class="emphasis">Finished in 0.00123 seconds (files took 0.14289 seconds to load)</span></span></span></span><br><span class="line"><span class="emphasis"><span class="strong"><span class="emphasis">7 examples, 0 failures, 7 pending</span></span></span></span><br></pre></td></tr></table></figure><p>然后,我们来实现我们的行为,忽略折腾的过程….直接上完成的code.</p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">china_district_code_spec.rb</span><br><span class="line"></span><br><span class="line"><span class="keyword">require</span> <span class="string">&#x27;spec_helper&#x27;</span></span><br><span class="line"><span class="keyword">require</span> <span class="string">&#x27;china_district_code&#x27;</span></span><br><span class="line"><span class="keyword">require</span> <span class="string">&#x27;csv&#x27;</span></span><br><span class="line"></span><br><span class="line">describe <span class="string">&quot;China district code&quot;</span> <span class="keyword">do</span></span><br><span class="line">  context <span class="string">&quot;district&quot;</span> <span class="keyword">do</span></span><br><span class="line">    it <span class="string">&quot;get province,city,area info&quot;</span> <span class="keyword">do</span></span><br><span class="line">      ChinaDistrictCode::load_china_district_code</span><br><span class="line">      csv_folder_path = File.join(File.expand_path(<span class="string">&#x27;../..&#x27;</span>,<span class="keyword">__FILE__</span>),<span class="string">&#x27;lib&#x27;</span>,<span class="string">&#x27;china_district_code&#x27;</span>,<span class="string">&#x27;csv&#x27;</span>)</span><br><span class="line">      provinces = CSV.read(File.join(csv_folder_path,<span class="string">&#x27;province.csv&#x27;</span>))</span><br><span class="line">      expect(provinces[<span class="number">0</span>][<span class="number">0</span>]).to eq(<span class="string">&#x27;11&#x27;</span>)</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">    it <span class="string">&quot;find citys by province&quot;</span> <span class="keyword">do</span></span><br><span class="line">      expect(ChinaDistrictCode::find_citys_by_province(<span class="string">&#x27;河北省&#x27;</span>)).to <span class="keyword">include</span>([<span class="string">&quot;130100&quot;</span>, <span class="string">&quot;石家庄市&quot;</span>])</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">    it <span class="string">&quot;find areas by city&quot;</span> <span class="keyword">do</span></span><br><span class="line">      expect(ChinaDistrictCode::find_areas_by_city(<span class="string">&#x27;石家庄市&#x27;</span>)).to <span class="keyword">include</span>([<span class="string">&quot;130103&quot;</span>, <span class="string">&quot;桥东区&quot;</span>])</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">    it <span class="string">&quot;find province by city&quot;</span> <span class="keyword">do</span></span><br><span class="line">      expect(ChinaDistrictCode::find_province_by_city(<span class="string">&#x27;太原&#x27;</span>)).to eql([<span class="string">&quot;140000&quot;</span>, <span class="string">&quot;山西省&quot;</span>])</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">    it <span class="string">&quot;find city,province by area&quot;</span> <span class="keyword">do</span></span><br><span class="line">      expect(ChinaDistrictCode::find_province_city_by_area(<span class="string">&#x27;桥东区&#x27;</span>)).to eql([[<span class="string">&quot;130000&quot;</span>, <span class="string">&quot;河北省&quot;</span>], [<span class="string">&quot;130100&quot;</span>, <span class="string">&quot;石家庄市&quot;</span>]])</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">    <span class="comment"># it &quot;find area by district code&quot;</span></span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">  context <span class="string">&quot;post code&quot;</span> <span class="keyword">do</span></span><br><span class="line">    it <span class="string">&quot;find post code  by district code&quot;</span></span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure><p>然后,一个个实现我们的需求,享受由红变绿的过程(囧)</p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#encoding: utf-8</span></span><br><span class="line"><span class="keyword">require</span> <span class="string">&#x27;logger&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">require</span> <span class="string">&quot;china_district_code/version&quot;</span></span><br><span class="line"><span class="keyword">require</span> <span class="string">&#x27;china_district_code/china_district_code/loader&#x27;</span></span><br><span class="line"></span><br><span class="line">LOGGER = Logger.new(File.join(File.dirname(<span class="keyword">__FILE__</span>),<span class="string">&#x27;/china_district_code/log/debug.log&#x27;</span>))</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">module</span> <span class="title">ChinaDistrictCode</span></span></span><br><span class="line"></span><br><span class="line">  load_file <span class="string">&#x27;models&#x27;</span></span><br><span class="line">  load_file <span class="string">&#x27;helpers&#x27;</span></span><br><span class="line"></span><br><span class="line">  <span class="keyword">include</span> CsvHelper</span><br><span class="line">  <span class="keyword">include</span> DistrictHelper</span><br><span class="line"></span><br><span class="line">  <span class="comment">#reload china district code from &#x27;http://www.stats.gov.cn/tjsj/tjbz/xzqhdm/201401/t20140116_501070.html&#x27;</span></span><br><span class="line">  def <span class="keyword">self</span>.load_china_district_code</span><br><span class="line">    DistrictHelper::get_china_district_code</span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">#find citys by province  </span></span><br><span class="line">  def <span class="keyword">self</span>.find_citys_by_province(name)</span><br><span class="line">    result = DistrictHelper::find_citys_by_province(name)</span><br><span class="line">    puts result.to_s</span><br><span class="line">    result</span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">#find areas by city</span></span><br><span class="line">  def <span class="keyword">self</span>.find_areas_by_city(name)</span><br><span class="line">    result = DistrictHelper::find_areas_by_city(name)</span><br><span class="line">    puts result.to_s</span><br><span class="line">    result</span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">#find province by city</span></span><br><span class="line">  def <span class="keyword">self</span>.find_province_by_city(name)</span><br><span class="line">    result = DistrictHelper::find_province_by_city(name)</span><br><span class="line">    puts result.to_s</span><br><span class="line">    result</span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">#find province,city by area</span></span><br><span class="line">  def <span class="keyword">self</span>.find_province_city_by_area(name)</span><br><span class="line">    result = DistrictHelper::find_province_city_by_area(name)</span><br><span class="line">    puts result.to_s</span><br><span class="line">    result</span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure><p>完成了gem的开发,接下来需要编译并发布.我们先修改一下gem的配置项.<br>打开 ‘china_district_code.gemspec’,修改如下</p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># coding: utf-8</span></span><br><span class="line">lib = File.expand_path(<span class="string">&#x27;../lib&#x27;</span>, <span class="keyword">__FILE__</span>)</span><br><span class="line"><span class="variable">$LOAD_PATH</span>.unshift(lib) <span class="keyword">unless</span> <span class="variable">$LOAD_PATH</span>.<span class="keyword">include</span>?(lib)</span><br><span class="line"><span class="keyword">require</span> <span class="string">&#x27;china_district_code/version&#x27;</span></span><br><span class="line"></span><br><span class="line">Gem::Specification.new <span class="keyword">do</span> <span class="params">|spec|</span></span><br><span class="line">  spec.name          = <span class="string">&quot;china_district_code&quot;</span></span><br><span class="line">  spec.version       = ChinaDistrictCode::VERSION</span><br><span class="line">  spec.authors       = [<span class="string">&quot;dodoliu&quot;</span>]</span><br><span class="line">  spec.email         = [<span class="string">&quot;donliu29@gmail.com&quot;</span>]</span><br><span class="line"></span><br><span class="line">  spec.summary       = <span class="string">%q&#123; China District Code Query plugin &#125;</span></span><br><span class="line">  spec.description   = <span class="string">%q&#123; China District Code Query plugin &#125;</span></span><br><span class="line">  spec.homepage      = <span class="string">&quot;https://github.com/dodoliu/china_district_code&quot;</span></span><br><span class="line"></span><br><span class="line">  spec.files         = <span class="string">`git ls-files -z`</span>.split(<span class="string">&quot;\x0&quot;</span>).reject &#123; <span class="params">|f|</span> f.match(<span class="regexp">%r&#123;^(test|spec|features)/&#125;</span>) &#125;</span><br><span class="line">  spec.bindir        = <span class="string">&quot;exe&quot;</span></span><br><span class="line">  spec.executables   = spec.files.grep(<span class="regexp">%r&#123;^exe/&#125;</span>) &#123; <span class="params">|f|</span> File.basename(f) &#125;</span><br><span class="line">  spec.require_paths = [<span class="string">&quot;lib&quot;</span>]</span><br><span class="line"></span><br><span class="line">  spec.add_development_dependency <span class="string">&quot;bundler&quot;</span>, <span class="string">&quot;~&gt; 1.12&quot;</span></span><br><span class="line">  spec.add_development_dependency <span class="string">&quot;rake&quot;</span>, <span class="string">&quot;~&gt; 10.0&quot;</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>在发布之前,我们先安装到本地试用一下,(可以用 rake -T 查看rake任务)</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">修改版本号为 VERSION = <span class="string">&quot;0.0.1&quot;</span></span><br><span class="line">rake build <span class="comment">#编译gem</span></span><br><span class="line">rake install <span class="comment">#安装到本地</span></span><br><span class="line"></span><br><span class="line"> -&gt; ⮀ china_district_code ⮀ ⭠ master± ⮀ rake build</span><br><span class="line">china_district_code 0.0.1 built to pkg/china_district_code-0.0.1.gem.</span><br><span class="line"> -&gt; ⮀ china_district_code ⮀ ⭠ master± ⮀ rake install</span><br><span class="line">china_district_code 0.0.1 built to pkg/china_district_code-0.0.1.gem.</span><br><span class="line">china_district_code (0.0.1) installed.</span><br><span class="line"><span class="comment">#然后irb调用一下</span></span><br><span class="line">2.3.1 :003 &gt; require <span class="string">&#x27;china_district_code&#x27;</span></span><br><span class="line"> =&gt; <span class="literal">true</span></span><br><span class="line">2.3.1 :004 &gt; ChinaDistrictCode.find_citys_by_province <span class="string">&#x27;湖南&#x27;</span></span><br><span class="line">[[<span class="string">&quot;430100&quot;</span>, <span class="string">&quot;长沙市&quot;</span>], [<span class="string">&quot;430200&quot;</span>, <span class="string">&quot;株洲市&quot;</span>], [<span class="string">&quot;430300&quot;</span>, <span class="string">&quot;湘潭市&quot;</span>], [<span class="string">&quot;430400&quot;</span>, <span class="string">&quot;衡阳市&quot;</span>], [<span class="string">&quot;430500&quot;</span>, <span class="string">&quot;邵阳市&quot;</span>], [<span class="string">&quot;430600&quot;</span>, <span class="string">&quot;岳阳市&quot;</span>], [<span class="string">&quot;430700&quot;</span>, <span class="string">&quot;常德市&quot;</span>], [<span class="string">&quot;430800&quot;</span>, <span class="string">&quot;张家界市&quot;</span>], [<span class="string">&quot;430900&quot;</span>, <span class="string">&quot;益阳市&quot;</span>], [<span class="string">&quot;431000&quot;</span>, <span class="string">&quot;郴州市&quot;</span>], [<span class="string">&quot;431100&quot;</span>, <span class="string">&quot;永州市&quot;</span>], [<span class="string">&quot;431200&quot;</span>, <span class="string">&quot;怀化市&quot;</span>], [<span class="string">&quot;431300&quot;</span>, <span class="string">&quot;娄底市&quot;</span>], [<span class="string">&quot;433100&quot;</span>, <span class="string">&quot;湘西土家族苗族自治州&quot;</span>]]</span><br><span class="line"> =&gt; [[<span class="string">&quot;430100&quot;</span>, <span class="string">&quot;长沙市&quot;</span>], [<span class="string">&quot;430200&quot;</span>, <span class="string">&quot;株洲市&quot;</span>], [<span class="string">&quot;430300&quot;</span>, <span class="string">&quot;湘潭市&quot;</span>], [<span class="string">&quot;430400&quot;</span>, <span class="string">&quot;衡阳市&quot;</span>], [<span class="string">&quot;430500&quot;</span>, <span class="string">&quot;邵阳市&quot;</span>], [<span class="string">&quot;430600&quot;</span>, <span class="string">&quot;岳阳市&quot;</span>], [<span class="string">&quot;430700&quot;</span>, <span class="string">&quot;常德市&quot;</span>], [<span class="string">&quot;430800&quot;</span>, <span class="string">&quot;张家界市&quot;</span>], [<span class="string">&quot;430900&quot;</span>, <span class="string">&quot;益阳市&quot;</span>], [<span class="string">&quot;431000&quot;</span>, <span class="string">&quot;郴州市&quot;</span>], [<span class="string">&quot;431100&quot;</span>, <span class="string">&quot;永州市&quot;</span>], [<span class="string">&quot;431200&quot;</span>, <span class="string">&quot;怀化市&quot;</span>], [<span class="string">&quot;431300&quot;</span>, <span class="string">&quot;娄底市&quot;</span>], [<span class="string">&quot;433100&quot;</span>, <span class="string">&quot;湘西土家族苗族自治州&quot;</span>]]</span><br><span class="line">2.3.1 :005 &gt;</span><br></pre></td></tr></table></figure><p>完成以上步骤后,可以确认我们的gem是没有问题的.下面打包发布到<a href="https://rubygems.org/">https://rubygems.org/</a></p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rake release</span><br></pre></td></tr></table></figure><p>你有可能会遇到这样的错误提示!(可以通过将代码提交到本地git仓库解决.(git add . &amp;&amp; git commit -m ‘first commit’))</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"> -&gt; ⮀ china_district_code ⮀ ⭠ master± ⮀ rake release</span><br><span class="line">china_district_code 0.0.1 built to pkg/china_district_code-0.0.1.gem.</span><br><span class="line">rake aborted!</span><br><span class="line">There are files that need to be committed first.</span><br><span class="line">/Users/dodoliu/.rvm/gems/ruby-2.3.1/gems/bundler-1.12.5/lib/bundler/gem_helper.rb:131:in `guard_clean&#x27;</span><br><span class="line">/Users/dodoliu/.rvm/gems/ruby-2.3.1/gems/bundler-1.12.5/lib/bundler/gem_helper.rb:60:in `block in install&#x27;</span><br><span class="line">Tasks: TOP =&gt; release =&gt; release:guard_clean</span><br><span class="line">(See full trace by running task with --trace)</span><br></pre></td></tr></table></figure><p>然后再次运行 rake release时,可能还会遇到下面这个错误(这是要求你的代码需要提交到远程仓库.我选择提交到github)</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"> ✘ ⮀ -&gt; ⮀ china<span class="emphasis">_district_</span>code ⮀ ⭠ master± ⮀ rake release</span><br><span class="line">china<span class="emphasis">_district_</span>code 0.0.1 built to pkg/china<span class="emphasis">_district_</span>code-0.0.1.gem.</span><br><span class="line">Tagged v0.0.1.</span><br><span class="line">Untagging v0.0.1 due to error.</span><br><span class="line">rake aborted!</span><br><span class="line">Couldn&#x27;t git push. `git push &#x27; failed with the following output:</span><br><span class="line"></span><br><span class="line">fatal: No configured push destination.</span><br><span class="line">Either specify the URL from the command-line or configure a remote repository using</span><br><span class="line"></span><br><span class="line"><span class="code">    git remote add &lt;name&gt; &lt;url&gt;</span></span><br><span class="line"><span class="code"></span></span><br><span class="line">and then push using the remote name</span><br><span class="line"></span><br><span class="line"><span class="code">    git push &lt;name&gt;</span></span><br><span class="line"><span class="code"></span></span><br><span class="line"></span><br><span class="line">/Users/dodoliu/.rvm/gems/ruby-2.3.1/gems/bundler-1.12.5/lib/bundler/gem<span class="emphasis">_helper.rb:121:in `perform_</span>git<span class="emphasis">_push&#x27;</span></span><br><span class="line"><span class="emphasis">/Users/dodoliu/.rvm/gems/ruby-2.3.1/gems/bundler-1.12.5/lib/bundler/gem_</span>helper.rb:113:in `git<span class="emphasis">_push&#x27;</span></span><br><span class="line"><span class="emphasis">/Users/dodoliu/.rvm/gems/ruby-2.3.1/gems/bundler-1.12.5/lib/bundler/gem_</span>helper.rb:64:in `block (2 levels) in install&#x27;</span><br><span class="line">/Users/dodoliu/.rvm/gems/ruby-2.3.1/gems/bundler-1.12.5/lib/bundler/gem<span class="emphasis">_helper.rb:145:in `tag_</span>version&#x27;</span><br><span class="line">/Users/dodoliu/.rvm/gems/ruby-2.3.1/gems/bundler-1.12.5/lib/bundler/gem<span class="emphasis">_helper.rb:64:in `block in install&#x27;</span></span><br><span class="line"><span class="emphasis">Tasks: TOP =&gt; release =&gt; release:source_</span>control<span class="emphasis">_push</span></span><br><span class="line"><span class="emphasis">(See full trace by running task with --trace)</span></span><br></pre></td></tr></table></figure><p>提交完成后,再次执行 rake release,看到以下内容则表示成功了.啦啦啦</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"> -&gt; ⮀ china_district_code ⮀ ⭠ master ⮀ rake release</span><br><span class="line">china_district_code 0.0.1 built to pkg/china_district_code-0.0.1.gem.</span><br><span class="line">Tagged v0.0.1.</span><br><span class="line">Pushed git commits and tags.</span><br><span class="line">Pushed china_district_code 0.0.1 to rubygems.org.</span><br></pre></td></tr></table></figure><p>然后自己装一下,让下载次数加1…😄</p>]]></content>
      
      
      <categories>
          
          <category> Ruby </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Ruby </tag>
            
            <tag> Gem </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>算法:插入排序</title>
      <link href="//algorithm-insertion-sort"/>
      <url>//algorithm-insertion-sort</url>
      
        <content type="html"><![CDATA[<p>插入排序的原理:<br>1.从第一个元素开始,该元素可以认为是已经被排序<br>2.取出下一个元素,在已经排序的元素序列中从后向前扫描<br>3.如果该元素(已排序)大于新元素,将该元素移动到下一个位置<br>4.重复步骤3,知道找到已排序的元素小于或等于新元素的位置<br>5.将新元素插入到该位置<br>6.重复步骤2-5</p><p>下面是实现代码:</p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">require</span> <span class="string">&#x27;pry&#x27;</span></span><br><span class="line"><span class="comment">#插入排序</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">insert_sort</span><span class="params">(arr)</span></span></span><br><span class="line">    i,j = <span class="number">1</span>,<span class="number">0</span></span><br><span class="line">    count = arr.length</span><br><span class="line">    <span class="keyword">while</span> i &lt; count</span><br><span class="line">        point = arr[i]</span><br><span class="line">        j = i - <span class="number">1</span></span><br><span class="line">        <span class="keyword">while</span> j &gt;= <span class="number">0</span> &amp;&amp; arr[j] &gt; point</span><br><span class="line">            arr[j + <span class="number">1</span>] = arr[j]</span><br><span class="line">            p arr</span><br><span class="line">            j -= <span class="number">1</span></span><br><span class="line">        <span class="keyword">end</span></span><br><span class="line">        arr[j + <span class="number">1</span>] = point</span><br><span class="line">        p arr</span><br><span class="line">        i += <span class="number">1</span></span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># binding.pry</span></span><br><span class="line">insert_sort [<span class="number">66</span>,<span class="number">13</span>,<span class="number">51</span>,<span class="number">76</span>,<span class="number">81</span>,<span class="number">26</span>,<span class="number">57</span>,<span class="number">69</span>,<span class="number">23</span>]</span><br></pre></td></tr></table></figure><p>排序过程</p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">[<span class="number">66</span>, <span class="number">66</span>, <span class="number">51</span>, <span class="number">76</span>, <span class="number">81</span>, <span class="number">26</span>, <span class="number">57</span>, <span class="number">69</span>, <span class="number">23</span>]</span><br><span class="line">[<span class="number">13</span>, <span class="number">66</span>, <span class="number">51</span>, <span class="number">76</span>, <span class="number">81</span>, <span class="number">26</span>, <span class="number">57</span>, <span class="number">69</span>, <span class="number">23</span>]</span><br><span class="line">[<span class="number">13</span>, <span class="number">66</span>, <span class="number">66</span>, <span class="number">76</span>, <span class="number">81</span>, <span class="number">26</span>, <span class="number">57</span>, <span class="number">69</span>, <span class="number">23</span>]</span><br><span class="line">[<span class="number">13</span>, <span class="number">51</span>, <span class="number">66</span>, <span class="number">76</span>, <span class="number">81</span>, <span class="number">26</span>, <span class="number">57</span>, <span class="number">69</span>, <span class="number">23</span>]</span><br><span class="line">[<span class="number">13</span>, <span class="number">51</span>, <span class="number">66</span>, <span class="number">76</span>, <span class="number">81</span>, <span class="number">26</span>, <span class="number">57</span>, <span class="number">69</span>, <span class="number">23</span>]</span><br><span class="line">[<span class="number">13</span>, <span class="number">51</span>, <span class="number">66</span>, <span class="number">76</span>, <span class="number">81</span>, <span class="number">26</span>, <span class="number">57</span>, <span class="number">69</span>, <span class="number">23</span>]</span><br><span class="line">[<span class="number">13</span>, <span class="number">51</span>, <span class="number">66</span>, <span class="number">76</span>, <span class="number">81</span>, <span class="number">81</span>, <span class="number">57</span>, <span class="number">69</span>, <span class="number">23</span>]</span><br><span class="line">[<span class="number">13</span>, <span class="number">51</span>, <span class="number">66</span>, <span class="number">76</span>, <span class="number">76</span>, <span class="number">81</span>, <span class="number">57</span>, <span class="number">69</span>, <span class="number">23</span>]</span><br><span class="line">[<span class="number">13</span>, <span class="number">51</span>, <span class="number">66</span>, <span class="number">66</span>, <span class="number">76</span>, <span class="number">81</span>, <span class="number">57</span>, <span class="number">69</span>, <span class="number">23</span>]</span><br><span class="line">[<span class="number">13</span>, <span class="number">51</span>, <span class="number">51</span>, <span class="number">66</span>, <span class="number">76</span>, <span class="number">81</span>, <span class="number">57</span>, <span class="number">69</span>, <span class="number">23</span>]</span><br><span class="line">[<span class="number">13</span>, <span class="number">26</span>, <span class="number">51</span>, <span class="number">66</span>, <span class="number">76</span>, <span class="number">81</span>, <span class="number">57</span>, <span class="number">69</span>, <span class="number">23</span>]</span><br><span class="line">[<span class="number">13</span>, <span class="number">26</span>, <span class="number">51</span>, <span class="number">66</span>, <span class="number">76</span>, <span class="number">81</span>, <span class="number">81</span>, <span class="number">69</span>, <span class="number">23</span>]</span><br><span class="line">[<span class="number">13</span>, <span class="number">26</span>, <span class="number">51</span>, <span class="number">66</span>, <span class="number">76</span>, <span class="number">76</span>, <span class="number">81</span>, <span class="number">69</span>, <span class="number">23</span>]</span><br><span class="line">[<span class="number">13</span>, <span class="number">26</span>, <span class="number">51</span>, <span class="number">66</span>, <span class="number">66</span>, <span class="number">76</span>, <span class="number">81</span>, <span class="number">69</span>, <span class="number">23</span>]</span><br><span class="line">[<span class="number">13</span>, <span class="number">26</span>, <span class="number">51</span>, <span class="number">57</span>, <span class="number">66</span>, <span class="number">76</span>, <span class="number">81</span>, <span class="number">69</span>, <span class="number">23</span>]</span><br><span class="line">[<span class="number">13</span>, <span class="number">26</span>, <span class="number">51</span>, <span class="number">57</span>, <span class="number">66</span>, <span class="number">76</span>, <span class="number">81</span>, <span class="number">81</span>, <span class="number">23</span>]</span><br><span class="line">[<span class="number">13</span>, <span class="number">26</span>, <span class="number">51</span>, <span class="number">57</span>, <span class="number">66</span>, <span class="number">76</span>, <span class="number">76</span>, <span class="number">81</span>, <span class="number">23</span>]</span><br><span class="line">[<span class="number">13</span>, <span class="number">26</span>, <span class="number">51</span>, <span class="number">57</span>, <span class="number">66</span>, <span class="number">69</span>, <span class="number">76</span>, <span class="number">81</span>, <span class="number">23</span>]</span><br><span class="line">[<span class="number">13</span>, <span class="number">26</span>, <span class="number">51</span>, <span class="number">57</span>, <span class="number">66</span>, <span class="number">69</span>, <span class="number">76</span>, <span class="number">81</span>, <span class="number">81</span>]</span><br><span class="line">[<span class="number">13</span>, <span class="number">26</span>, <span class="number">51</span>, <span class="number">57</span>, <span class="number">66</span>, <span class="number">69</span>, <span class="number">76</span>, <span class="number">76</span>, <span class="number">81</span>]</span><br><span class="line">[<span class="number">13</span>, <span class="number">26</span>, <span class="number">51</span>, <span class="number">57</span>, <span class="number">66</span>, <span class="number">69</span>, <span class="number">69</span>, <span class="number">76</span>, <span class="number">81</span>]</span><br><span class="line">[<span class="number">13</span>, <span class="number">26</span>, <span class="number">51</span>, <span class="number">57</span>, <span class="number">66</span>, <span class="number">66</span>, <span class="number">69</span>, <span class="number">76</span>, <span class="number">81</span>]</span><br><span class="line">[<span class="number">13</span>, <span class="number">26</span>, <span class="number">51</span>, <span class="number">57</span>, <span class="number">57</span>, <span class="number">66</span>, <span class="number">69</span>, <span class="number">76</span>, <span class="number">81</span>]</span><br><span class="line">[<span class="number">13</span>, <span class="number">26</span>, <span class="number">51</span>, <span class="number">51</span>, <span class="number">57</span>, <span class="number">66</span>, <span class="number">69</span>, <span class="number">76</span>, <span class="number">81</span>]</span><br><span class="line">[<span class="number">13</span>, <span class="number">26</span>, <span class="number">26</span>, <span class="number">51</span>, <span class="number">57</span>, <span class="number">66</span>, <span class="number">69</span>, <span class="number">76</span>, <span class="number">81</span>]</span><br><span class="line">[<span class="number">13</span>, <span class="number">23</span>, <span class="number">26</span>, <span class="number">51</span>, <span class="number">57</span>, <span class="number">66</span>, <span class="number">69</span>, <span class="number">76</span>, <span class="number">81</span>]</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 算法 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 算法 </tag>
            
            <tag> Ruby </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>如何单步调试ruby代码</title>
      <link href="//ruby-debug"/>
      <url>//ruby-debug</url>
      
        <content type="html"><![CDATA[<p>C#写习惯了,当使用Sublime写Ruby时没有IDE进行debug,实在是不习惯.<br>怎么办?!<br>不能debug,创造条件也要debug!<br>经过一番搜索加实践,记录如下.</p><p>需要的gem</p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">gem install pry</span><br><span class="line">gem install pry-byebug <span class="comment">#支持ruby2.0.0,如果需要支持低版本的ruby可以使用 pry-debugger这个gem</span></span><br></pre></td></tr></table></figure><p>安装了上述gem后,在需要debug的代码中添加 binding.pry</p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">require</span> <span class="string">&#x27;pry&#x27;</span></span><br><span class="line"></span><br><span class="line">binding.pry</span><br><span class="line">quick_sort! [<span class="number">66</span>,<span class="number">13</span>,<span class="number">51</span>,<span class="number">76</span>,<span class="number">81</span>,<span class="number">26</span>,<span class="number">57</span>,<span class="number">69</span>,<span class="number">23</span>], <span class="number">0</span>, <span class="number">8</span></span><br></pre></td></tr></table></figure><p>当代码运行起来后就会停在binding.pry下一行代码的位置.<br>pry是不支持单步调试的,为啥呢?!<br>如果需要单步调试就需要 pry-byebug这个gem.<br><a href="https://github.com/pry/pry">pry文档</a><br><a href="https://github.com/deivid-rodriguez/pry-byebug">pry-byebug文档</a></p><p>pry-byebug的一些用法</p><p>使用简化的命令</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">#在用户根目录下创建 .pryrc配置文件</span><br><span class="line">vim ~/.pryrc</span><br><span class="line">#输入内容</span><br><span class="line">if defined?(PryByebug)</span><br><span class="line">  Pry.commands.alias_command &#x27;c&#x27;, &#x27;continue&#x27;</span><br><span class="line">  Pry.commands.alias_command &#x27;s&#x27;, &#x27;step&#x27;</span><br><span class="line">  Pry.commands.alias_command &#x27;n&#x27;, &#x27;next&#x27;</span><br><span class="line">  Pry.commands.alias_command &#x27;f&#x27;, &#x27;finish&#x27;</span><br><span class="line">end</span><br></pre></td></tr></table></figure><p>如果需要通过按enter键达到执行上一次输入的命令的效果,则在配置文件中输入以下内容.</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># Hit Enter to repeat last command</span><br><span class="line">Pry::Commands.command /^$/, &quot;repeat last command&quot; do</span><br><span class="line">  _pry_.run_command Pry.history.to_a.last</span><br><span class="line">end</span><br></pre></td></tr></table></figure><p>断点用法:</p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">break</span> SomeClass<span class="comment">#run            #断点打在 SomeClass这个类下的run方法上</span></span><br><span class="line"><span class="keyword">break</span> Foo<span class="comment">#bar if baz?          #当baz?返回true时,断点打在 Foo类下的bar方法上</span></span><br><span class="line"><span class="keyword">break</span> app/models/user.<span class="symbol">rb:</span><span class="number">15</span>    <span class="comment">#断点打在 user.rb的第15行</span></span><br><span class="line"><span class="keyword">break</span> <span class="number">14</span>                       <span class="comment">#断点打在第14行</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">break</span> --condition <span class="number">4</span> x &gt; <span class="number">2</span>      <span class="comment">#当x&gt;2时,命中第四个断点</span></span><br><span class="line"><span class="keyword">break</span> --condition <span class="number">3</span>            <span class="comment">#删除命中第三个断点的条件</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">break</span> --delete <span class="number">5</span>               <span class="comment">#删除第5个断点</span></span><br><span class="line"><span class="keyword">break</span> --disable-all            <span class="comment">#禁用所有断点</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">break</span>                          <span class="comment">#显示出所有断点的位置</span></span><br><span class="line"><span class="keyword">break</span> --show <span class="number">2</span>                 <span class="comment">#显示第二个断点附近的代码</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">break</span> --delete-all             <span class="comment">#删除所有断点</span></span><br><span class="line"><span class="keyword">break</span> --enable <span class="number">2</span>               <span class="comment">#启用第二个断点...为毛没有一次启用所有断点的功能?!</span></span><br></pre></td></tr></table></figure><p>退出pry</p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">exit!</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Ruby </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Ruby </tag>
            
            <tag> Ruby On Rails </tag>
            
            <tag> MySql </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Rials Tip:多库操作</title>
      <link href="//rails-tip-multiple-database"/>
      <url>//rails-tip-multiple-database</url>
      
        <content type="html"><![CDATA[<p>我有个需求需要Rails连接mysql和sqlserver,这就需要rails的多数据库操作支持.<br>rails对mysql原生支持是很好的,所以不需要改动什么.但是操作sqlserver就需要手动配置一下了.<br>查了一堆资料后记录如下:<br>需要用到的gem:<br><a href="https://github.com/rails-sqlserver/activerecord-sqlserver-adapter">github地址</a></p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">gem <span class="string">&#x27;tiny_tds&#x27;</span></span><br><span class="line">gem <span class="string">&#x27;activerecord-sqlserver-adapter&#x27;</span>, <span class="string">&#x27;~&gt; 4.2.0&#x27;</span></span><br></pre></td></tr></table></figure><p>database.yml针对sqlserver的配置</p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">sqlserver_db:</span></span><br><span class="line">  <span class="symbol">adapter:</span> sqlserver</span><br><span class="line">  <span class="symbol">encoding:</span> utf8</span><br><span class="line">  <span class="symbol">host:</span> localhost</span><br><span class="line">  <span class="symbol">port:</span> <span class="number">6381</span></span><br><span class="line">  <span class="symbol">database:</span> sqlserver_db</span><br><span class="line">  <span class="symbol">username:</span> sa</span><br><span class="line">  <span class="symbol">password:</span> <span class="number">123456</span></span><br></pre></td></tr></table></figure><p>model的设置:<br><a href="http://technology.customink.com/blog/2015/06/22/rails-multi-database-best-practices-roundup/">具体原因参考</a><br>在models文件夹下创建一个sqlserver_base.rb的文件,代码为:</p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">SqlserverBase</span> &lt; ActiveRecord::Base</span></span><br><span class="line">  establish_connection configurations[<span class="string">&#x27;sqlserver_db&#x27;</span>]  <span class="comment">#切换到sqlserver</span></span><br><span class="line">  <span class="keyword">self</span>.abstract_class = <span class="literal">true</span>  <span class="comment">#声明该类为抽象类</span></span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure><p>sqlserver表对应的model这样声明:</p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Friend</span> &lt; SqlserverBase</span></span><br><span class="line">  <span class="keyword">self</span>.table_name = <span class="string">&#x27;Friend&#x27;</span></span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Ruby On Rails </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Ruby On Rails </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Rails Tip:select多选后,后台如何接收参数数组</title>
      <link href="//rails-tip-select-multiple"/>
      <url>//rails-tip-select-multiple</url>
      
        <content type="html"><![CDATA[<p>在rails中,当下拉框select 可以多选时,如果需要在后台接收到数组参数,需要进行如下设置.<br>1,html中 name属性需要设置为数组形式,如下</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">name</span>=<span class="string">&quot;site_event[]&quot;</span> <span class="attr">id</span>=<span class="string">&quot;site_event&quot;</span> <span class="attr">v-model</span>=<span class="string">&#x27;site_event_selected&#x27;</span> <span class="attr">multiple</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;-1&quot;</span> <span class="attr">selected</span>&gt;</span>--选择站点事件--<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">option</span> <span class="attr">v-for</span>=<span class="string">&#x27;option in site_event_options&#x27;</span> <span class="attr">v-bind</span>=<span class="string">&quot;&#123;value: option.eventid&#125;&quot;</span> &gt;</span>&#123;&#123;option.actionname&#125;&#125;<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure><p>2,后台接收时如下</p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">query_pv_uv_by_day</span></span></span><br><span class="line">  site_events = params[<span class="symbol">:site_event</span>].flatten</span><br><span class="line">  puts site_events</span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Ruby On Rails </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Ruby On Rails </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Rails Error:too few arguments</title>
      <link href="//rails-error-too-few-arguments"/>
      <url>//rails-error-too-few-arguments</url>
      
        <content type="html"><![CDATA[<p>报错描述:<br>我有一个ajax请求</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">@get_sites = (data) -&gt;</span><br><span class="line">  $.getJSON <span class="built_in">window</span>.urls.get_sites,&#123;<span class="attr">brandsid</span>:data&#125;,(result) -&gt;</span><br><span class="line">    <span class="built_in">console</span>.log result</span><br></pre></td></tr></table></figure><p>请求的action</p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_sites</span></span></span><br><span class="line">  brandsid = params[<span class="symbol">:brandsid</span>]</span><br><span class="line">  <span class="variable">@sites</span> = Site.find_by_brandsid brandsid</span><br><span class="line">  respond_to <span class="keyword">do</span> <span class="params">|foramt|</span></span><br><span class="line">    format.json &#123;render <span class="symbol">json:</span> <span class="variable">@sites</span> &#125;</span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure><p>然后报错信息为:</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">ArgumentError in Backend::ExportPvUvsController#get_sites</span><br><span class="line">too few arguments</span><br><span class="line"></span><br><span class="line">Rails.root: D:/work/rails_obj/topinsight_query</span><br><span class="line"></span><br><span class="line">Application Trace | Framework Trace | Full Trace</span><br><span class="line">app/controllers/backend/export_pv_uvs_controller.rb:20:in `format&#x27;</span><br><span class="line">app/controllers/backend/export_pv_uvs_controller.rb:20:in `block in get_sites&#x27;</span><br><span class="line">app/controllers/backend/export_pv_uvs_controller.rb:18:in `get_sites&#x27;</span><br><span class="line">Request</span><br><span class="line"></span><br><span class="line">Parameters:</span><br><span class="line"></span><br><span class="line">&#123;&quot;brandsid&quot;=&gt;&quot;271ee3565366688560fc60eab0f7a5c8&quot;&#125;</span><br><span class="line">Toggle session dump</span><br><span class="line">Toggle env dump</span><br><span class="line">Response</span><br><span class="line"></span><br><span class="line">Headers:</span><br><span class="line"></span><br><span class="line">None</span><br></pre></td></tr></table></figure><p>让我郁闷了…我查了一整天的资料都没找到解决方法.所有的问题都是说缺少 respond_to 块.但是我的有啊…<br>实在憋不住了,上ruby china发帖问了一下.帖子发完没几分钟就被关小黑屋了.<br>我就纳闷了,我累死查了一整天的问题会这么简单?!不死心的我一边问管理员为啥关小黑屋,一边继续查.<br>在纠结中等到了李华顺大神的回复.他直接指出是 “format”打错了…<br>得知原因的我真想找个坑跳进去.怎么说我也是一个老程序员了,怎么能这么粗心.<br>总结:写C#一直用编译器能大大降低这种低级错误,但是在编辑器上一定要多注意、多注意、多注意！<br>写此篇文章的目的是警醒自己.</p>]]></content>
      
      
      <categories>
          
          <category> Ruby On Rails </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Ruby On Rails </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>算法:快速排序</title>
      <link href="//algorithm-quick-sort"/>
      <url>//algorithm-quick-sort</url>
      
        <content type="html"><![CDATA[<p>快速排序算法的原理:<br>在一个长度不小于3的序列A[0..n-1]中,对于任何 0 &lt; n &lt; n-1,以每一个元素p = A[n]为界,都可以将序列分隔为前、后两个子序列 A1 ＝ A[0..n]和 A2 ＝ A[n..n-1],则称p为序列A的轴点。然后对两个子序列排序，当子序列排序完成即可得到整个序列的排序结果(又称为 分治法)。<br>轴点的要点为：若一个元素是轴点，则经过排序之后，它的位置不应发生变化。<br>但是，实际应用中，序列中可能不存在这样一个轴点。所以需要选取轴点。<br>一般轴点的选取都选择数组的第一项或最后一项,但是最高效的方式是随机选取轴点.<br>下面的代码将采用固定轴点的方式演示快速排序.</p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">require</span> <span class="string">&#x27;pry&#x27;</span></span><br><span class="line"><span class="comment">#快速排序</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">division</span><span class="params">(arr, left, right)</span></span></span><br><span class="line">  <span class="comment"># point = arr[Random.new.rand(arr.length - 1)]</span></span><br><span class="line">  <span class="comment">#确定基点</span></span><br><span class="line">  point = arr[left]</span><br><span class="line">  <span class="keyword">while</span> left &lt; right</span><br><span class="line">    <span class="comment">#如果右边的数大于基点,则不操作,反之交换位置</span></span><br><span class="line">    <span class="keyword">while</span> left &lt; right &amp;&amp; arr[right] &gt;= point</span><br><span class="line">      right -= <span class="number">1</span></span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">    swap arr, left, right</span><br><span class="line">    <span class="comment">#如果左边的数小于基点,则不操作,反之交换位置</span></span><br><span class="line">    <span class="keyword">while</span> left &lt; right &amp;&amp; arr[left] &lt;= point</span><br><span class="line">      left += <span class="number">1</span></span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">    swap arr, right, left</span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line">  <span class="comment">#返回轴点下标</span></span><br><span class="line">  left</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#交换位置</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">swap</span><span class="params">(arr,l,h)</span></span></span><br><span class="line">  arr[l],arr[h] = arr[h],arr[l]</span><br><span class="line">  p arr</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">quick_sort!</span><span class="params">(arr, left, right)</span></span></span><br><span class="line">  <span class="keyword">if</span> left &lt; right</span><br><span class="line">    p = division arr, left, right</span><br><span class="line">    <span class="comment">#递归</span></span><br><span class="line">    quick_sort! arr, left, p - <span class="number">1</span></span><br><span class="line">    quick_sort! arr, p + <span class="number">1</span>, right</span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">binding.pry</span><br><span class="line">quick_sort! [<span class="number">66</span>,<span class="number">13</span>,<span class="number">51</span>,<span class="number">76</span>,<span class="number">81</span>,<span class="number">26</span>,<span class="number">57</span>,<span class="number">69</span>,<span class="number">23</span>], <span class="number">0</span>, <span class="number">8</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>排序过程</p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">[<span class="number">23</span>, <span class="number">13</span>, <span class="number">51</span>, <span class="number">76</span>, <span class="number">81</span>, <span class="number">26</span>, <span class="number">57</span>, <span class="number">69</span>, <span class="number">66</span>]</span><br><span class="line">[<span class="number">23</span>, <span class="number">13</span>, <span class="number">51</span>, <span class="number">66</span>, <span class="number">81</span>, <span class="number">26</span>, <span class="number">57</span>, <span class="number">69</span>, <span class="number">76</span>]</span><br><span class="line">[<span class="number">23</span>, <span class="number">13</span>, <span class="number">51</span>, <span class="number">57</span>, <span class="number">81</span>, <span class="number">26</span>, <span class="number">66</span>, <span class="number">69</span>, <span class="number">76</span>]</span><br><span class="line">[<span class="number">23</span>, <span class="number">13</span>, <span class="number">51</span>, <span class="number">57</span>, <span class="number">66</span>, <span class="number">26</span>, <span class="number">81</span>, <span class="number">69</span>, <span class="number">76</span>]</span><br><span class="line">[<span class="number">23</span>, <span class="number">13</span>, <span class="number">51</span>, <span class="number">57</span>, <span class="number">26</span>, <span class="number">66</span>, <span class="number">81</span>, <span class="number">69</span>, <span class="number">76</span>]</span><br><span class="line">[<span class="number">23</span>, <span class="number">13</span>, <span class="number">51</span>, <span class="number">57</span>, <span class="number">26</span>, <span class="number">66</span>, <span class="number">81</span>, <span class="number">69</span>, <span class="number">76</span>]</span><br><span class="line">[<span class="number">13</span>, <span class="number">23</span>, <span class="number">51</span>, <span class="number">57</span>, <span class="number">26</span>, <span class="number">66</span>, <span class="number">81</span>, <span class="number">69</span>, <span class="number">76</span>]</span><br><span class="line">[<span class="number">13</span>, <span class="number">23</span>, <span class="number">51</span>, <span class="number">57</span>, <span class="number">26</span>, <span class="number">66</span>, <span class="number">81</span>, <span class="number">69</span>, <span class="number">76</span>]</span><br><span class="line">[<span class="number">13</span>, <span class="number">23</span>, <span class="number">26</span>, <span class="number">57</span>, <span class="number">51</span>, <span class="number">66</span>, <span class="number">81</span>, <span class="number">69</span>, <span class="number">76</span>]</span><br><span class="line">[<span class="number">13</span>, <span class="number">23</span>, <span class="number">26</span>, <span class="number">51</span>, <span class="number">57</span>, <span class="number">66</span>, <span class="number">81</span>, <span class="number">69</span>, <span class="number">76</span>]</span><br><span class="line">[<span class="number">13</span>, <span class="number">23</span>, <span class="number">26</span>, <span class="number">51</span>, <span class="number">57</span>, <span class="number">66</span>, <span class="number">81</span>, <span class="number">69</span>, <span class="number">76</span>]</span><br><span class="line">[<span class="number">13</span>, <span class="number">23</span>, <span class="number">26</span>, <span class="number">51</span>, <span class="number">57</span>, <span class="number">66</span>, <span class="number">81</span>, <span class="number">69</span>, <span class="number">76</span>]</span><br><span class="line">[<span class="number">13</span>, <span class="number">23</span>, <span class="number">26</span>, <span class="number">51</span>, <span class="number">57</span>, <span class="number">66</span>, <span class="number">76</span>, <span class="number">69</span>, <span class="number">81</span>]</span><br><span class="line">[<span class="number">13</span>, <span class="number">23</span>, <span class="number">26</span>, <span class="number">51</span>, <span class="number">57</span>, <span class="number">66</span>, <span class="number">76</span>, <span class="number">69</span>, <span class="number">81</span>]</span><br><span class="line">[<span class="number">13</span>, <span class="number">23</span>, <span class="number">26</span>, <span class="number">51</span>, <span class="number">57</span>, <span class="number">66</span>, <span class="number">69</span>, <span class="number">76</span>, <span class="number">81</span>]</span><br><span class="line">[<span class="number">13</span>, <span class="number">23</span>, <span class="number">26</span>, <span class="number">51</span>, <span class="number">57</span>, <span class="number">66</span>, <span class="number">69</span>, <span class="number">76</span>, <span class="number">81</span>]</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 算法 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 算法 </tag>
            
            <tag> Ruby </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>算法:冒泡排序</title>
      <link href="//algorithm-bubble-sort"/>
      <url>//algorithm-bubble-sort</url>
      
        <content type="html"><![CDATA[<p>冒泡排序算法的原理:<br>有一组数列A[0..n-1],重复遍历该数列,一次比较两个相邻的元素A[i]和A[i+1],如果A[i]&lt;=A[i+1]则不需要交换位置,如果A[i]&gt;A[i+1],则需要交换位置.<br>实现:</p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">require</span> <span class="string">&#x27;benchmark&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">bubble_sort!</span><span class="params">(args)</span></span></span><br><span class="line">  <span class="keyword">for</span> i <span class="keyword">in</span> <span class="number">0</span>..(args.length-<span class="number">1</span>)</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> <span class="number">0</span>..(args.length-i-<span class="number">2</span>)</span><br><span class="line">      <span class="keyword">if</span> (args[j+<span class="number">1</span>] &lt;=&gt; args[j]) == -<span class="number">1</span></span><br><span class="line">        args[j], args[j+<span class="number">1</span>] = args[j+<span class="number">1</span>], args[j]</span><br><span class="line">        <span class="comment"># p args</span></span><br><span class="line">      <span class="keyword">end</span></span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">Benchmark.bm(<span class="number">7</span>) <span class="keyword">do</span> <span class="params">|x|</span></span><br><span class="line">  x.report(<span class="string">&#x27;冒泡排序:&#x27;</span>) &#123; bubble_sort! [<span class="number">8</span>,<span class="number">3</span>,<span class="number">1</span>,<span class="number">2</span>,<span class="number">6</span>,<span class="number">5</span>,<span class="number">9</span>,<span class="number">10</span>,<span class="number">4</span>] &#125;</span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure><p>遍历过程</p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">[<span class="number">3</span>, <span class="number">1</span>, <span class="number">8</span>, <span class="number">2</span>, <span class="number">6</span>, <span class="number">5</span>, <span class="number">9</span>, <span class="number">10</span>, <span class="number">4</span>]</span><br><span class="line">[<span class="number">3</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">8</span>, <span class="number">6</span>, <span class="number">5</span>, <span class="number">9</span>, <span class="number">10</span>, <span class="number">4</span>]</span><br><span class="line">[<span class="number">3</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">6</span>, <span class="number">8</span>, <span class="number">5</span>, <span class="number">9</span>, <span class="number">10</span>, <span class="number">4</span>]</span><br><span class="line">[<span class="number">3</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">6</span>, <span class="number">5</span>, <span class="number">8</span>, <span class="number">9</span>, <span class="number">10</span>, <span class="number">4</span>]</span><br><span class="line">[<span class="number">3</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">6</span>, <span class="number">5</span>, <span class="number">8</span>, <span class="number">9</span>, <span class="number">4</span>, <span class="number">10</span>]</span><br><span class="line">[<span class="number">1</span>, <span class="number">3</span>, <span class="number">2</span>, <span class="number">6</span>, <span class="number">5</span>, <span class="number">8</span>, <span class="number">9</span>, <span class="number">4</span>, <span class="number">10</span>]</span><br><span class="line">[<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">6</span>, <span class="number">5</span>, <span class="number">8</span>, <span class="number">9</span>, <span class="number">4</span>, <span class="number">10</span>]</span><br><span class="line">[<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">8</span>, <span class="number">9</span>, <span class="number">4</span>, <span class="number">10</span>]</span><br><span class="line">[<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">8</span>, <span class="number">4</span>, <span class="number">9</span>, <span class="number">10</span>]</span><br><span class="line">[<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">4</span>, <span class="number">8</span>, <span class="number">9</span>, <span class="number">10</span>]</span><br><span class="line">[<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">5</span>, <span class="number">4</span>, <span class="number">6</span>, <span class="number">8</span>, <span class="number">9</span>, <span class="number">10</span>]</span><br><span class="line">[<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">8</span>, <span class="number">9</span>, <span class="number">10</span>]</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 算法 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 算法 </tag>
            
            <tag> Ruby </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Rails Error:libmysqlclient loaderror</title>
      <link href="//rails-error-loaderror-libmysqlclient"/>
      <url>//rails-error-loaderror-libmysqlclient</url>
      
        <content type="html"><![CDATA[<p>环境:<br>osx 10.11.5</p><p>ruby ‘2.2.0’<br>gem ‘rails’, ‘4.2.3’<br>gem ‘mysql2’, ‘~&gt; 0.3.18’</p><p>今天在折腾rails时，遇到mysql2与rails版本匹配问题, 虽然mysql2已经指定了 ‘~&gt; 0.3.18’ 版本。报错信息：</p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">LiudongyuematoMacBook-<span class="symbol">Air:</span>r_admin_demo liudongyue<span class="variable">$ </span>rails s</span><br><span class="line">/Users/liudongyue/.rvm/gems/ruby-<span class="number">2.2</span>.<span class="number">0</span>/gems/mysql2-<span class="number">0.3</span>.<span class="number">20</span>/lib/mysql2.<span class="symbol">rb:</span><span class="number">31</span><span class="symbol">:in</span> <span class="string">&#x27;require&#x27;</span>: dlopen(<span class="regexp">/Users/liudongyue</span><span class="regexp">/.rvm/gems</span><span class="regexp">/ruby-2.2.0/gems</span><span class="regexp">/mysql2-0.3.20/lib</span><span class="regexp">/mysql2/mysql</span>2.bundle, <span class="number">9</span>): Library <span class="keyword">not</span> <span class="symbol">loaded:</span> /usr/local/lib/libmysqlclient.<span class="number">18</span>.dylib (LoadError)</span><br><span class="line">  Referenced <span class="symbol">from:</span> /Users/liudongyue/.rvm/gems/ruby-<span class="number">2.2</span>.<span class="number">0</span>/gems/mysql2-<span class="number">0.3</span>.<span class="number">20</span>/lib/mysql2/mysql2.bundle</span><br><span class="line">  <span class="symbol">Reason:</span> image <span class="keyword">not</span> found - <span class="regexp">/Users/liudongyue</span><span class="regexp">/.rvm/gems</span><span class="regexp">/ruby-2.2.0/gems</span><span class="regexp">/mysql2-0.3.20/lib</span><span class="regexp">/mysql2/mysql</span>2.bundle</span><br><span class="line">  from /Users/liudongyue/.rvm/gems/ruby-<span class="number">2.2</span>.<span class="number">0</span>/gems/mysql2-<span class="number">0.3</span>.<span class="number">20</span>/lib/mysql2.<span class="symbol">rb:</span><span class="number">31</span><span class="symbol">:in</span> <span class="string">&#x27;&lt;top (required)&gt;&#x27;</span></span><br><span class="line">  from /Users/liudongyue/.rvm/gems/ruby-<span class="number">2.2</span>.<span class="number">0</span><span class="variable">@global</span>/gems/bundler-<span class="number">1.9</span>.<span class="number">2</span>/lib/bundler/runtime.<span class="symbol">rb:</span><span class="number">76</span><span class="symbol">:in</span> <span class="string">&#x27;require&#x27;</span></span><br><span class="line">  from /Users/liudongyue/.rvm/gems/ruby-<span class="number">2.2</span>.<span class="number">0</span><span class="variable">@global</span>/gems/bundler-<span class="number">1.9</span>.<span class="number">2</span>/lib/bundler/runtime.<span class="symbol">rb:</span><span class="number">76</span><span class="symbol">:in</span> <span class="string">&#x27;block (2 levels) in require&#x27;</span></span><br><span class="line">  from /Users/liudongyue/.rvm/gems/ruby-<span class="number">2.2</span>.<span class="number">0</span><span class="variable">@global</span>/gems/bundler-<span class="number">1.9</span>.<span class="number">2</span>/lib/bundler/runtime.<span class="symbol">rb:</span><span class="number">72</span><span class="symbol">:in</span> <span class="string">&#x27;each&#x27;</span></span><br><span class="line">  from /Users/liudongyue/.rvm/gems/ruby-<span class="number">2.2</span>.<span class="number">0</span><span class="variable">@global</span>/gems/bundler-<span class="number">1.9</span>.<span class="number">2</span>/lib/bundler/runtime.<span class="symbol">rb:</span><span class="number">72</span><span class="symbol">:in</span> <span class="string">&#x27;block in require&#x27;</span></span><br><span class="line">  from /Users/liudongyue/.rvm/gems/ruby-<span class="number">2.2</span>.<span class="number">0</span><span class="variable">@global</span>/gems/bundler-<span class="number">1.9</span>.<span class="number">2</span>/lib/bundler/runtime.<span class="symbol">rb:</span><span class="number">61</span><span class="symbol">:in</span> <span class="string">&#x27;each&#x27;</span></span><br><span class="line">  from /Users/liudongyue/.rvm/gems/ruby-<span class="number">2.2</span>.<span class="number">0</span><span class="variable">@global</span>/gems/bundler-<span class="number">1.9</span>.<span class="number">2</span>/lib/bundler/runtime.<span class="symbol">rb:</span><span class="number">61</span><span class="symbol">:in</span> <span class="string">&#x27;require&#x27;</span></span><br><span class="line">  from /Users/liudongyue/.rvm/gems/ruby-<span class="number">2.2</span>.<span class="number">0</span><span class="variable">@global</span>/gems/bundler-<span class="number">1.9</span>.<span class="number">2</span>/lib/bundler.<span class="symbol">rb:</span><span class="number">134</span><span class="symbol">:in</span> <span class="string">&#x27;require&#x27;</span></span><br><span class="line">  from /Users/liudongyue/LDY/Test/r_admin_demo/config/application.<span class="symbol">rb:</span><span class="number">16</span><span class="symbol">:in</span> <span class="string">&#x27;&lt;top (required)&gt;&#x27;</span></span><br><span class="line">  from /Users/liudongyue/.rvm/gems/ruby-<span class="number">2.2</span>.<span class="number">0</span>/gems/railties-<span class="number">4.2</span>.<span class="number">3</span>/lib/rails/commands/commands_tasks.<span class="symbol">rb:</span><span class="number">78</span><span class="symbol">:in</span> <span class="string">&#x27;require&#x27;</span></span><br><span class="line">  from /Users/liudongyue/.rvm/gems/ruby-<span class="number">2.2</span>.<span class="number">0</span>/gems/railties-<span class="number">4.2</span>.<span class="number">3</span>/lib/rails/commands/commands_tasks.<span class="symbol">rb:</span><span class="number">78</span><span class="symbol">:in</span> <span class="string">&#x27;block in server&#x27;</span></span><br><span class="line">  from /Users/liudongyue/.rvm/gems/ruby-<span class="number">2.2</span>.<span class="number">0</span>/gems/railties-<span class="number">4.2</span>.<span class="number">3</span>/lib/rails/commands/commands_tasks.<span class="symbol">rb:</span><span class="number">75</span><span class="symbol">:in</span> <span class="string">&#x27;tap&#x27;</span></span><br><span class="line">  from /Users/liudongyue/.rvm/gems/ruby-<span class="number">2.2</span>.<span class="number">0</span>/gems/railties-<span class="number">4.2</span>.<span class="number">3</span>/lib/rails/commands/commands_tasks.<span class="symbol">rb:</span><span class="number">75</span><span class="symbol">:in</span> <span class="string">&#x27;server&#x27;</span></span><br><span class="line">  from /Users/liudongyue/.rvm/gems/ruby-<span class="number">2.2</span>.<span class="number">0</span>/gems/railties-<span class="number">4.2</span>.<span class="number">3</span>/lib/rails/commands/commands_tasks.<span class="symbol">rb:</span><span class="number">39</span><span class="symbol">:in</span> <span class="string">&#x27;run_command!&#x27;</span></span><br><span class="line">  from /Users/liudongyue/.rvm/gems/ruby-<span class="number">2.2</span>.<span class="number">0</span>/gems/railties-<span class="number">4.2</span>.<span class="number">3</span>/lib/rails/commands.<span class="symbol">rb:</span><span class="number">17</span><span class="symbol">:in</span> <span class="string">&#x27;&lt;top (required)&gt;&#x27;</span></span><br><span class="line">  from bin/<span class="symbol">rails:</span><span class="number">4</span><span class="symbol">:in</span> <span class="string">&#x27;require&#x27;</span></span><br><span class="line">  from bin/<span class="symbol">rails:</span><span class="number">4</span><span class="symbol">:in</span> <span class="string">&#x27;&lt;main&gt;&#x27;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>可能的解决方法：<br>重装mysql,重装mysql2</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">brew uninstall mysql</span><br><span class="line">brew install mysql</span><br><span class="line">gem uninstall mysql2</span><br><span class="line">gem install mysql</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Ruby On Rails </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Ruby On Rails </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Javascript中的call和apply理解</title>
      <link href="//js-call-apply"/>
      <url>//js-call-apply</url>
      
        <content type="html"><![CDATA[<p>Javascript中的call和apply让人觉得很神奇和好玩.有了它俩,js的面向对象编程方便了一大截.<br>下面通过两个例子来理解call和apply.</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//有 egg 这样一个类</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">egg</span>(<span class="params"></span>) </span>&#123;&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//为 egg 设置属性和方法</span></span><br><span class="line">egg.prototype = &#123;</span><br><span class="line">  <span class="attr">egg_type</span>: <span class="string">&#x27;未知动物&#x27;</span>,</span><br><span class="line">  <span class="attr">hatch</span>: <span class="function"><span class="keyword">function</span>(<span class="params">legs</span>)</span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (!legs) &#123;</span><br><span class="line">      legs = <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">&#x27;孵化出一只 &#x27;</span> + <span class="built_in">this</span>.egg_type + <span class="string">&#x27;,有 &#x27;</span> + legs + <span class="string">&#x27; 条腿&#x27;</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//实例化一个 egg 类</span></span><br><span class="line">tmp_egg = <span class="keyword">new</span> egg();</span><br><span class="line">tmp_egg.hatch();</span><br><span class="line"><span class="comment">//p 孵化出一只 未知动物,有 0 条腿</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//实例化一个 鸭蛋类</span></span><br><span class="line">duck_egg = &#123; <span class="attr">egg_type</span>: <span class="string">&#x27;小鸭子&#x27;</span> &#125;;</span><br><span class="line">tmp_egg.hatch.call(duck_egg,<span class="number">2</span>);</span><br><span class="line"><span class="comment">//p 孵化出一只 小鸭子,有 2 条腿</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//实例化一个 鳄鱼蛋类</span></span><br><span class="line">crocodile_egg = &#123; <span class="attr">egg_type</span>: <span class="string">&#x27;小鳄鱼&#x27;</span>&#125;;</span><br><span class="line">tmp_egg.hatch.apply(crocodile_egg,[<span class="number">4</span>]);</span><br><span class="line"><span class="comment">//p 孵化出一只 小鳄鱼,有 4 条腿</span></span><br></pre></td></tr></table></figure><p>多重继承</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//有一个动物类</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">animal</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">  <span class="built_in">this</span>.name = <span class="function"><span class="keyword">function</span> (<span class="params">name</span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">&#x27;我是 &#x27;</span> + name);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//有一个 动物叫声类</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">cry</span>(<span class="params">sound</span>)</span>&#123;</span><br><span class="line">  <span class="built_in">this</span>.sound = <span class="function"><span class="keyword">function</span>(<span class="params">sound</span>)</span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">&#x27;我的叫声 &#x27;</span> + sound);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//有一个 家禽类</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">fowl</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="comment">//实现多重继承</span></span><br><span class="line">  animal.call(<span class="built_in">this</span>);</span><br><span class="line">  cry.apply(<span class="built_in">this</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">tmp_chicken = <span class="keyword">new</span> fowl();</span><br><span class="line">tmp_chicken.name(<span class="string">&#x27;鸡&#x27;</span>);</span><br><span class="line">tmp_chicken.sound(<span class="string">&#x27;咕咕咕&#x27;</span>);</span><br><span class="line"><span class="comment">//p 我是 鸡</span></span><br><span class="line"><span class="comment">//p 我的叫声 咕咕咕</span></span><br><span class="line"></span><br><span class="line">tmp_duck = <span class="keyword">new</span> fowl();</span><br><span class="line">tmp_duck.name(<span class="string">&#x27;鸭&#x27;</span>);</span><br><span class="line">tmp_duck.sound(<span class="string">&#x27;嘎嘎嘎&#x27;</span>);</span><br><span class="line"><span class="comment">//p 我是 鸭</span></span><br><span class="line"><span class="comment">//p 我的叫声 嘎嘎嘎</span></span><br></pre></td></tr></table></figure><p>总结:<br>call和apply功能相同,都是用来改变函数体内部 this 指向的.<br>call和apply的区别是,apply的第二个参数是个数组.</p>]]></content>
      
      
      <categories>
          
          <category> Javascript </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Javascript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>基于一个已经存在的MySql库创建Rails的Model</title>
      <link href="//ruby-existing-mysql-generate-model"/>
      <url>//ruby-existing-mysql-generate-model</url>
      
        <content type="html"><![CDATA[<p>我有一个很奇葩的需求!<br>我需要在不改变现有MySql表结构的情况下使用Rails访问MySql.目前只需要用到ActiveRecord的查询功能.<br>为何会有这种奇葩需求呢?!<br>现有系统的数据架构是运行很久且稳定的,且现有系统不允许添加一些方便平时使用的小功能.那只能另辟蹊径了.又因为我想尝试下在Windows下搞Rails开发.于是乎,这个奇葩需求就产生了.<br>既然有想法了,那么就动手做吧!<br>windows下安装Rails环境就不说了,网上一堆.<br>访问MySql使用mysql2.如果在确认数据库配置没有任何问题的前提下,还是无法访问MySql.请尝试下载安装MySql的动态链接库文件libmysql.dll.这是<a href="http://www.mysql.com/downloads/connector/c/">下载地址</a><br>如果没有意外,安装完动态链接库后一切就正常了.如何还不正常…请问Google!<br>这个需求的唯一关键点就是设置Model的默认访问table名称.因为按照Rails的约定,Model是单数,数据库中的表必须是复数.比如有Account这个Model,如果数据库中的表是account,那么需要按照下面代码中的设置来创建Model.</p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Account</span> &lt; ActiveRecord::Base</span></span><br><span class="line">    <span class="keyword">self</span>.table_name = <span class="string">&#x27;account&#x27;</span></span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure><p>这样设置之后,就可以愉快的使用ActiveRecord的强大功能了.</p>]]></content>
      
      
      <categories>
          
          <category> Ruby On Rails </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Ruby On Rails </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JSONP的原理与实现</title>
      <link href="//js-jsonp"/>
      <url>//js-jsonp</url>
      
        <content type="html"><![CDATA[<p>之前在做统计分析系统的时候需要跨域请求数据.Jquery已经封装了jsonp的实现,但是考虑到统计代码的大小,决定弃用jquery.自己实现一下.<br>jsonp的原理其实很简单,通过script标签发送一个callback参数到后端,后端返回数据时,使用这个callback函数包裹一下.这样,在前端接收到后端的返回后,就可以执行这个callback函数.<br>在使用jsonp时需要注意,jsonp只能发送get请求.<br>下面是jsonp的实现代码.</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> _ajax = &#123;</span><br><span class="line">    <span class="attr">ajax_jsonp</span>: &#123;</span><br><span class="line">        <span class="comment">//获取当前时间戳</span></span><br><span class="line">        <span class="attr">now</span>: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">            <span class="keyword">return</span> (<span class="keyword">new</span> <span class="built_in">Date</span>()).getTime();</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="comment">//获取16位随机数</span></span><br><span class="line">        <span class="attr">rand</span>: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="built_in">Math</span>.random().toString().substr(<span class="number">2</span>);</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="comment">//url组装</span></span><br><span class="line">        <span class="attr">parse_data</span>: <span class="function"><span class="keyword">function</span> (<span class="params">data</span>) </span>&#123;</span><br><span class="line">            <span class="keyword">var</span> ret = <span class="string">&quot;&quot;</span>;</span><br><span class="line">            <span class="keyword">if</span> (<span class="keyword">typeof</span> data === <span class="string">&quot;string&quot;</span>) &#123;</span><br><span class="line">                ret = data;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span> (<span class="keyword">typeof</span> data === <span class="string">&quot;object&quot;</span>) &#123;</span><br><span class="line">                <span class="keyword">for</span> (<span class="keyword">var</span> key <span class="keyword">in</span> data) &#123;</span><br><span class="line">                    ret += <span class="string">&quot;&amp;&quot;</span> + key + <span class="string">&quot;=&quot;</span> + <span class="built_in">encodeURIComponent</span>(data[key]);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">//加上时间戳</span></span><br><span class="line">            ret += <span class="string">&quot;&amp;_time=&quot;</span> + <span class="built_in">this</span>.now();</span><br><span class="line">            <span class="keyword">return</span> ret;</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment">        * jsonp调用的方法</span></span><br><span class="line"><span class="comment">        * <span class="doctag">@param <span class="type">&#123;object&#125;</span> </span>url 请求的url</span></span><br><span class="line"><span class="comment">        * <span class="doctag">@param <span class="type">&#123;object&#125;</span> </span>data 请求的data</span></span><br><span class="line"><span class="comment">        */</span></span><br><span class="line">        <span class="attr">jsonp</span>: <span class="function"><span class="keyword">function</span> (<span class="params">url, data</span>) </span>&#123;</span><br><span class="line">            <span class="keyword">var</span> name;</span><br><span class="line">            url = url + (url.indexOf(<span class="string">&quot;?&quot;</span>) === -<span class="number">1</span> ? <span class="string">&quot;?&quot;</span> : <span class="string">&quot;&amp;&quot;</span>) + <span class="built_in">this</span>.parse_data(data);</span><br><span class="line"></span><br><span class="line">            <span class="comment">//检测callback的函数名是否已经定义</span></span><br><span class="line">            <span class="keyword">var</span> match = <span class="regexp">/callback=([a-zA-Z\._]+)/</span>.exec(url);</span><br><span class="line">            <span class="keyword">if</span> (match &amp;&amp; match[<span class="number">1</span>]) &#123;</span><br><span class="line">                name = match[<span class="number">1</span>].replace(<span class="regexp">/\./g</span>, <span class="string">&quot;_&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="comment">//如果url中没有callback,直接返回</span></span><br><span class="line">                <span class="keyword">throw</span> <span class="keyword">new</span> <span class="built_in">Error</span>(<span class="string">&quot;invalid callback param&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="comment">//创建script标签</span></span><br><span class="line">            <span class="keyword">var</span> script = <span class="built_in">document</span>.createElement(<span class="string">&quot;script&quot;</span>);</span><br><span class="line">            script.type = <span class="string">&quot;text/javascript&quot;</span>;</span><br><span class="line">            script.src = url;</span><br><span class="line"></span><br><span class="line">            <span class="comment">//在head里面插入script元素</span></span><br><span class="line">            <span class="keyword">var</span> head = <span class="built_in">document</span>.getElementsByTagName(<span class="string">&quot;head&quot;</span>);</span><br><span class="line">            <span class="keyword">if</span> (head &amp;&amp; head[<span class="number">0</span>]) &#123;</span><br><span class="line">                head[<span class="number">0</span>].appendChild(script);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>调用</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">_ajax.ajax_jsonp.jsonp(_url, data);</span><br><span class="line">#比如_url中的callback是这样的参数: ?callback=<span class="built_in">window</span>.getdata</span><br><span class="line">#则在js中注册这个<span class="built_in">window</span>.getdata函数即可</span><br><span class="line"><span class="built_in">window</span>.getdata = <span class="function"><span class="keyword">function</span>(<span class="params">data</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(data);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Javascript </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Javascript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo搭建静态Blog后的源码管理</title>
      <link href="//hexo-blog-source-manage"/>
      <url>//hexo-blog-source-manage</url>
      
        <content type="html"><![CDATA[<p>当我们使用Hexo方便快捷的搭建完静态Blog,并愉快的写完第一篇Blog发布后.可能会遇到这样的问题:<br>我的Blog源码怎么管理啊?!<br>官方的命令咋没有把源码一并提交到GitHub啊?!<br>我要是有多台电脑,还要再安装一遍不成?!<br>同志,不要怕,接下来请跟我一步一步做.</p><h4 id="下面拿我的-dodoliu-blog为例-以下所有的命令操作都假设你处在blog文件夹的根目录下-且你的系统是OSX"><a href="#下面拿我的-dodoliu-blog为例-以下所有的命令操作都假设你处在blog文件夹的根目录下-且你的系统是OSX" class="headerlink" title="下面拿我的 dodoliu blog为例,以下所有的命令操作都假设你处在blog文件夹的根目录下,且你的系统是OSX"></a>下面拿我的 dodoliu blog为例,以下所有的命令操作都假设你处在blog文件夹的根目录下,且你的系统是OSX</h4><ul><li>先删除 dodoliu blog文件夹下的 .git 文件夹,该文件夹在windows下默认是隐藏的<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> dodoliu</span><br><span class="line">rm -rf .git</span><br></pre></td></tr></table></figure></li><li>再删除 themes 主题文件夹下的 .git 文件夹,如果发现有 .github 文件夹也一并删掉.<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> themes/next</span><br><span class="line">rm -rf .git .github</span><br></pre></td></tr></table></figure></li><li>然后回到dodoliu blog的根目录,创建git仓库<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> dodoliu</span><br><span class="line">git init</span><br></pre></td></tr></table></figure></li><li>然后添加文件到git仓库,在添加前确认你blog根目录下的.gitignore文件内容像我这样<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">.DS_Store</span><br><span class="line">Thumbs.db</span><br><span class="line">db.json</span><br><span class="line">*.<span class="built_in">log</span></span><br><span class="line">node_modules/</span><br><span class="line">public/</span><br><span class="line">.deploy*/</span><br></pre></td></tr></table></figure></li><li>接下来把本地代码提交到本地git仓库<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git add . &amp;&amp; git commit -m <span class="string">&#x27;init&#x27;</span></span><br></pre></td></tr></table></figure></li><li>然后copy 线上 github的仓库地址,添加到本地仓库(<a href="https://github.com/dodoliu/dodoliu.github.io.git%E6%98%AF%E6%88%91%E7%9A%84github%E4%BB%93%E5%BA%93%E5%9C%B0%E5%9D%80,%E8%AF%B7%E6%9B%BF%E6%8D%A2%E6%88%90%E4%BD%A0%E8%87%AA%E5%B7%B1%E7%9A%84">https://github.com/dodoliu/dodoliu.github.io.git是我的github仓库地址,请替换成你自己的</a>)<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git remote add origin https://github.com/dodoliu/dodoliu.github.io.git</span><br></pre></td></tr></table></figure></li><li>然后创建一个本地分支,并切换到该分支下<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git branch blog</span><br><span class="line">git checkout blog</span><br></pre></td></tr></table></figure></li><li>接下来,提交代码到github线上的blog分支中<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git push origin blog</span><br></pre></td></tr></table></figure></li><li>提交到github时,如果不想每次都打这么多命令,可以进行这样的设置<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git push --set-upstream origin blog</span><br><span class="line"><span class="comment">#之后就用下面这个命令推送吧</span></span><br><span class="line">git push</span><br></pre></td></tr></table></figure>然后到github上看看的master和blog分支的区别吧!<br>以后再次提交请在blog分支下进行操作.<br>到这里,恭喜你!<br>大功告成,开始你的下一篇blog吧!</li></ul>]]></content>
      
      
      <categories>
          
          <category> Hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
            <tag> Git </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用CoffeeScript实现KnockoutJS的年月日级联选择插件</title>
      <link href="//js-coffee-ko-year-month-day"/>
      <url>//js-coffee-ko-year-month-day</url>
      
        <content type="html"><![CDATA[<p>项目中需要使用简单的年月日级联选择功能遇到了好几次.每次都要Copy,想想还是老老实实封装一下,方便复用.<br>功能展示<br><img src="http://githubblog-10030337.file.myqcloud.com/year_month_day_select.gif?sign=b5DHy+lL4iAAloRdzquaVFw2xsthPTEwMDMwMzM3Jms9QUtJRGNDZFJ2aDZITWsyTE1SNDFEMHo1SERFbzlORndwcWcxJmU9MTQ2NzY5NjU0NSZ0PTE0NjUxMDQ1NDUmcj03Mzk5NDMzNSZmPS95ZWFyX21vbnRoX2RheV9zZWxlY3QuZ2lmJmI9Z2l0aHViYmxvZw==" alt="功能展示"></p><p><a href="https://github.com/dodoliu/HelperLibrary/tree/master/Javascript/year_month_day_select">源码地址</a></p><h3 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h3><blockquote><p>使用KnockoutJS实现年月日三个下拉级联,方便复用<br>  模式A(year_month_day_select_a): 完整的年月日控件<br>  模式B(year_month_day_select_b): 只包含年和月的控件<br>  基本参数的详细说明在 coffee中</p></blockquote><h3 id="编译"><a href="#编译" class="headerlink" title="编译"></a>编译</h3><blockquote><p>coffee -w -b -o . -c .</p></blockquote><h3 id="用法"><a href="#用法" class="headerlink" title="用法"></a>用法</h3><p>引入</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span> <span class="attr">src</span>=<span class="string">&quot;year_month_day_select.js&quot;</span> <span class="attr">defer</span>=<span class="string">&#x27;defer&#x27;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p>html中绑定</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">data-bind</span>=<span class="string">&quot;component:&#x27;year_month_day_select_a&#x27; &quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><p>或</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">data-bind</span>=<span class="string">&quot;component:&#x27;year_month_day_select_b&#x27; &quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><p>获取值</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> year = $(<span class="string">&quot;#test_sl_year option:selected&quot;</span>).val();</span><br><span class="line"><span class="keyword">var</span> month = $(<span class="string">&quot;#test_sl_month option:selected&quot;</span>).val();</span><br><span class="line"><span class="keyword">var</span> day = $(<span class="string">&quot;#test_sl_day option:selected&quot;</span>).val();</span><br><span class="line">$(<span class="string">&quot;#span&quot;</span>).text(year + <span class="string">&#x27;-&#x27;</span> + month + <span class="string">&#x27;-&#x27;</span> + day);</span><br></pre></td></tr></table></figure><p>日期默认选择有三种形式</p><ul><li>模式1,默认选种 年月日<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"> <span class="keyword">new</span> YearMonthDaySelect(&#123;</span><br><span class="line">  <span class="attr">initSelect</span>: <span class="number">2</span>,</span><br><span class="line">  <span class="attr">yearDefault</span>: <span class="string">&#x27;year&#x27;</span>,</span><br><span class="line">  <span class="attr">monthDefault</span>: <span class="string">&#x27;month&#x27;</span>,</span><br><span class="line">  <span class="attr">dayDefault</span>: <span class="string">&#x27;day&#x27;</span>,</span><br><span class="line">  <span class="attr">yearInterval</span>: <span class="number">10</span>,</span><br><span class="line">  <span class="attr">yearTitle</span>: <span class="string">&#x27;年&#x27;</span>,</span><br><span class="line">  <span class="attr">yearID</span>: <span class="string">&#x27;test_sl_year&#x27;</span>,</span><br><span class="line">  <span class="attr">yearName</span>: <span class="string">&#x27;test_sl_year_name&#x27;</span>,</span><br><span class="line">  <span class="attr">yearClass</span>: <span class="string">&#x27;test_sl_year_class otherclassname&#x27;</span>,</span><br><span class="line">  <span class="attr">monthTitle</span>: <span class="string">&#x27;月&#x27;</span>,</span><br><span class="line">  <span class="attr">monthID</span>: <span class="string">&#x27;test_sl_month&#x27;</span>,</span><br><span class="line">  <span class="attr">monthName</span>: <span class="string">&#x27;test_sl_month_name&#x27;</span>,</span><br><span class="line">  <span class="attr">monthClass</span>: <span class="string">&#x27;test_sl_month_class otherclassname&#x27;</span>,</span><br><span class="line">  <span class="attr">dayTitle</span>: <span class="string">&#x27;日&#x27;</span>,</span><br><span class="line">  <span class="attr">dayID</span>: <span class="string">&#x27;test_sl_day&#x27;</span>,</span><br><span class="line">  <span class="attr">dayName</span>: <span class="string">&#x27;test_sl_day_name&#x27;</span>,</span><br><span class="line">  <span class="attr">dayClass</span>: <span class="string">&#x27;test_sl_day_class otherclassname&#x27;</span></span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></li><li>模式2, 默认选中 当前 年月日<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">new</span> YearMonthDaySelect(&#123;</span><br><span class="line">  <span class="attr">initSelect</span>: <span class="number">2</span>,</span><br><span class="line">  <span class="attr">yearInterval</span>: <span class="number">10</span>,</span><br><span class="line">  <span class="attr">yearTitle</span>: <span class="string">&#x27;年&#x27;</span>,</span><br><span class="line">  <span class="attr">yearID</span>: <span class="string">&#x27;test_sl_year&#x27;</span>,</span><br><span class="line">  <span class="attr">yearName</span>: <span class="string">&#x27;test_sl_year_name&#x27;</span>,</span><br><span class="line">  <span class="attr">yearClass</span>: <span class="string">&#x27;test_sl_year_class otherclassname&#x27;</span>,</span><br><span class="line">  <span class="attr">monthTitle</span>: <span class="string">&#x27;月&#x27;</span>,</span><br><span class="line">  <span class="attr">monthID</span>: <span class="string">&#x27;test_sl_month&#x27;</span>,</span><br><span class="line">  <span class="attr">monthName</span>: <span class="string">&#x27;test_sl_month_name&#x27;</span>,</span><br><span class="line">  <span class="attr">monthClass</span>: <span class="string">&#x27;test_sl_month_class otherclassname&#x27;</span>,</span><br><span class="line">  <span class="attr">dayTitle</span>: <span class="string">&#x27;日&#x27;</span>,</span><br><span class="line">  <span class="attr">dayID</span>: <span class="string">&#x27;test_sl_day&#x27;</span>,</span><br><span class="line">  <span class="attr">dayName</span>: <span class="string">&#x27;test_sl_day_name&#x27;</span>,</span><br><span class="line">  <span class="attr">dayClass</span>: <span class="string">&#x27;test_sl_day_class otherclassname&#x27;</span></span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></li><li>模式3, 默认选中 当前 年,1月,1日<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">new</span> YearMonthDaySelect(&#123;</span><br><span class="line">  <span class="attr">initSelect</span>: <span class="number">3</span>,</span><br><span class="line">  <span class="attr">yearInterval</span>: <span class="number">10</span>,</span><br><span class="line">  <span class="attr">yearTitle</span>: <span class="string">&#x27;年&#x27;</span>,</span><br><span class="line">  <span class="attr">yearID</span>: <span class="string">&#x27;test_sl_year&#x27;</span>,</span><br><span class="line">  <span class="attr">yearName</span>: <span class="string">&#x27;test_sl_year_name&#x27;</span>,</span><br><span class="line">  <span class="attr">yearClass</span>: <span class="string">&#x27;test_sl_year_class otherclassname&#x27;</span>,</span><br><span class="line">  <span class="attr">monthTitle</span>: <span class="string">&#x27;月&#x27;</span>,</span><br><span class="line">  <span class="attr">monthID</span>: <span class="string">&#x27;test_sl_month&#x27;</span>,</span><br><span class="line">  <span class="attr">monthName</span>: <span class="string">&#x27;test_sl_month_name&#x27;</span>,</span><br><span class="line">  <span class="attr">monthClass</span>: <span class="string">&#x27;test_sl_month_class otherclassname&#x27;</span>,</span><br><span class="line">  <span class="attr">dayTitle</span>: <span class="string">&#x27;日&#x27;</span>,</span><br><span class="line">  <span class="attr">dayID</span>: <span class="string">&#x27;test_sl_day&#x27;</span>,</span><br><span class="line">  <span class="attr">dayName</span>: <span class="string">&#x27;test_sl_day_name&#x27;</span>,</span><br><span class="line">  <span class="attr">dayClass</span>: <span class="string">&#x27;test_sl_day_class otherclassname&#x27;</span></span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></li><li>无论处于何种模式下,只要传入了默认值则选中指定的年月日<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">new</span> YearMonthDaySelect(&#123;</span><br><span class="line">  <span class="attr">initYear</span>: <span class="number">2013</span>,</span><br><span class="line">  <span class="attr">initMonth</span>: <span class="number">3</span>,</span><br><span class="line">  <span class="attr">initDay</span>: <span class="number">2</span>,</span><br><span class="line">  <span class="attr">yearInterval</span>: <span class="number">10</span>,</span><br><span class="line">  <span class="attr">yearTitle</span>: <span class="string">&#x27;年&#x27;</span>,</span><br><span class="line">  <span class="attr">yearID</span>: <span class="string">&#x27;test_sl_year&#x27;</span>,</span><br><span class="line">  <span class="attr">yearName</span>: <span class="string">&#x27;test_sl_year_name&#x27;</span>,</span><br><span class="line">  <span class="attr">yearClass</span>: <span class="string">&#x27;test_sl_year_class otherclassname&#x27;</span>,</span><br><span class="line">  <span class="attr">monthTitle</span>: <span class="string">&#x27;月&#x27;</span>,</span><br><span class="line">  <span class="attr">monthID</span>: <span class="string">&#x27;test_sl_month&#x27;</span>,</span><br><span class="line">  <span class="attr">monthName</span>: <span class="string">&#x27;test_sl_month_name&#x27;</span>,</span><br><span class="line">  <span class="attr">monthClass</span>: <span class="string">&#x27;test_sl_month_class otherclassname&#x27;</span>,</span><br><span class="line">  <span class="attr">dayTitle</span>: <span class="string">&#x27;日&#x27;</span>,</span><br><span class="line">  <span class="attr">dayID</span>: <span class="string">&#x27;test_sl_day&#x27;</span>,</span><br><span class="line">  <span class="attr">dayName</span>: <span class="string">&#x27;test_sl_day_name&#x27;</span>,</span><br><span class="line">  <span class="attr">dayClass</span>: <span class="string">&#x27;test_sl_day_class otherclassname&#x27;</span></span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h3 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h3><blockquote><p>该扩展所需依赖<br>jquery.js<br>helper.js<br>knockout.js<br>只能同时存在一种模式<br>必须 通过 new YearMonthDaySelect() 调用,否则无法正常使用</p></blockquote></li></ul>]]></content>
      
      
      <categories>
          
          <category> Javascript </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Javascript </tag>
            
            <tag> CoffeeScript </tag>
            
            <tag> KnockoutJS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>虚拟机下CentOS中Nginx的反向代理和负载均衡初探</title>
      <link href="//nginx-virtualbox-centos7-loadbalanciing"/>
      <url>//nginx-virtualbox-centos7-loadbalanciing</url>
      
        <content type="html"><![CDATA[<h3 id="目的"><a href="#目的" class="headerlink" title="目的:"></a>目的:</h3><blockquote><p>属性nginx的反向代理和负载均衡</p></blockquote><h3 id="要求"><a href="#要求" class="headerlink" title="要求:"></a>要求:</h3><blockquote><p>使用nginx配置三个站点<br>虚拟机的主机能通过负载均衡访问这三个站点</p></blockquote><h3 id="环境"><a href="#环境" class="headerlink" title="环境:"></a>环境:</h3><blockquote><p>VirtualBox: 5.0.20<br>CentOS: CentOS-7-x86_64-Minimal-1511<br>Nginx: 1.10.0<br>主机: win7</p></blockquote><h3 id="具体设置"><a href="#具体设置" class="headerlink" title="具体设置"></a>具体设置</h3><h4 id="三个站点分别为"><a href="#三个站点分别为" class="headerlink" title="三个站点分别为:"></a>三个站点分别为:</h4><h5 id="站点1"><a href="#站点1" class="headerlink" title="站点1:"></a>站点1:</h5><blockquote><p>路径: /home/www/blog_1<br>端口: 801<br>根目录文件: index.html<br>根目录文件内容: blog_1</p></blockquote><h5 id="站点2"><a href="#站点2" class="headerlink" title="站点2:"></a>站点2:</h5><blockquote><p>路径: /home/www/blog_2<br>端口: 802<br>根目录文件: index.html<br>根目录文件内容: blog_2</p></blockquote><h5 id="站点3"><a href="#站点3" class="headerlink" title="站点3:"></a>站点3:</h5><blockquote><p>路径: /home/www/blog_3<br>端口: 803<br>根目录文件: index.html<br>根目录文件内容: blog_3</p></blockquote><h5 id="VirtualBox的网络配置"><a href="#VirtualBox的网络配置" class="headerlink" title="VirtualBox的网络配置:"></a>VirtualBox的网络配置:</h5><blockquote><p>NAT模式下配置虚拟机和主机的端口映射</p></blockquote><table><thead><tr><th>主机IP</th><th>主机端口</th><th>虚拟机IP</th><th>虚拟机端口</th></tr></thead><tbody><tr><td>127.0.0.1</td><td>12080</td><td>10.0.2.15</td><td>80</td></tr><tr><td>127.0.0.1</td><td>12801</td><td>10.0.2.15</td><td>801</td></tr><tr><td>127.0.0.1</td><td>12802</td><td>10.0.2.15</td><td>802</td></tr><tr><td>127.0.0.1</td><td>12803</td><td>10.0.2.15</td><td>803</td></tr></tbody></table><blockquote><p>这样配置的目的是<br>通过访问 127.0.0.1:12080 访问负载均衡站点<br>通过 127.0.0.1:12801 ..12802 ..12803 访问各个站点</p></blockquote><h5 id="简单配置后的nginx-conf如下-所有原来注释的内容都被我删掉了"><a href="#简单配置后的nginx-conf如下-所有原来注释的内容都被我删掉了" class="headerlink" title="简单配置后的nginx.conf如下(所有原来注释的内容都被我删掉了):"></a>简单配置后的nginx.conf如下(所有原来注释的内容都被我删掉了):</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line">worker_processes  1;</span><br><span class="line"></span><br><span class="line">events &#123;</span><br><span class="line">    worker_connections  1024;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">http &#123;</span><br><span class="line">    include       mime.types;</span><br><span class="line">    default_type  application/octet-stream;</span><br><span class="line"></span><br><span class="line">    sendfile        on;</span><br><span class="line"></span><br><span class="line">    keepalive_timeout  65;</span><br><span class="line"></span><br><span class="line">    upstream blog_server &#123;</span><br><span class="line">      server 127.0.0.1:801 weight=1;</span><br><span class="line">      server 127.0.0.1:802 weight=1;</span><br><span class="line">      server 127.0.0.1:803 weight=1;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    server &#123;</span><br><span class="line">      listen 801;</span><br><span class="line">      server_name blog1;</span><br><span class="line">      root /home/www/blog_1;</span><br><span class="line">      index index.html;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    server &#123;</span><br><span class="line">      listen 802;</span><br><span class="line">      server_name blog2;</span><br><span class="line">      root /home/www/blog_2;</span><br><span class="line">      index index.html;</span><br><span class="line">    &#125;</span><br><span class="line">    server &#123;</span><br><span class="line">      listen 803;</span><br><span class="line">      server_name blog3;</span><br><span class="line">      root /home/www/blog_3;</span><br><span class="line">      index index.html;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    server &#123;</span><br><span class="line">        listen       80;</span><br><span class="line">        server_name  localhost;</span><br><span class="line"></span><br><span class="line">        location / &#123;</span><br><span class="line"></span><br><span class="line">         proxy_pass http://blog_server;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        error_page   500 502 503 504  /50x.html;</span><br><span class="line">        location = /50x.html &#123;</span><br><span class="line">            root   html;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>这样配置后,重启nginx<br>在主机中访问 127.0.0.1:12080  即可查看到负载均衡带来的效果.</p></blockquote><h5 id="配置项说明"><a href="#配置项说明" class="headerlink" title="配置项说明:"></a>配置项说明:</h5><blockquote><p>三个站点, 分配监听 801,802,803</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">  listen 801;</span><br><span class="line">  server_name blog1;</span><br><span class="line">  root /home/www/blog_1;</span><br><span class="line">  index index.html;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">server &#123;</span><br><span class="line">  listen 802;</span><br><span class="line">  server_name blog2;</span><br><span class="line">  root /home/www/blog_2;</span><br><span class="line">  index index.html;</span><br><span class="line">&#125;</span><br><span class="line">server &#123;</span><br><span class="line">  listen 803;</span><br><span class="line">  server_name blog3;</span><br><span class="line">  root /home/www/blog_3;</span><br><span class="line">  index index.html;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="反向代理和负载均衡的配置"><a href="#反向代理和负载均衡的配置" class="headerlink" title="反向代理和负载均衡的配置"></a>反向代理和负载均衡的配置</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">upstream blog_server &#123;</span><br><span class="line">  server 127.0.0.1:801 weight=1;</span><br><span class="line">  server 127.0.0.1:802 weight=1;</span><br><span class="line">  server 127.0.0.1:803 weight=1;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>关于该节点的详细说明(<a href="http://www.cnblogs.com/xiaogangqq123/archive/2011/03/04/1971002.html">引用别人的</a>)</p><h5 id="定义负载均衡设备的-Ip及设备状态"><a href="#定义负载均衡设备的-Ip及设备状态" class="headerlink" title="定义负载均衡设备的 Ip及设备状态"></a>定义负载均衡设备的 Ip及设备状态</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">upstream myServer &#123;</span><br><span class="line">    server 127.0.0.1:801 down;</span><br><span class="line">    server 127.0.0.1:802 weight=2;</span><br><span class="line">    server 127.0.0.1:803;</span><br><span class="line">    server 127.0.0.1:804 backup;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="upstream-每个设备的状态"><a href="#upstream-每个设备的状态" class="headerlink" title="upstream 每个设备的状态:"></a>upstream 每个设备的状态:</h5><blockquote><p>down 表示单前的server暂时不参与负载<br>weight  默认为1.weight越大，负载的权重就越大。<br>max_fails ：允许请求失败的次数默认为1.当超过最大次数时，返回proxy_next_upstream 模块定义的错误<br>fail_timeout:max_fails 次失败后，暂停的时间。<br>backup： 其它所有的非backup机器down或者忙的时候，请求backup机器。所以这台机器压力会最轻。</p></blockquote><h5 id="访问入口的配置"><a href="#访问入口的配置" class="headerlink" title="访问入口的配置:"></a>访问入口的配置:</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">      listen       80;</span><br><span class="line">      server_name  localhost;</span><br><span class="line"></span><br><span class="line">      location / &#123;</span><br><span class="line"></span><br><span class="line">       proxy_pass http://blog_server;</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      error_page   500 502 503 504  /50x.html;</span><br><span class="line">      location = /50x.html &#123;</span><br><span class="line">          root   html;</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><p>*** 主要是这个配置 ***<br>*** proxy_pass <a href="http://blog_server/">http://blog_server</a>; #在这个节点下启用负载均衡 ***</p>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> CentOS </tag>
            
            <tag> Nginx </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>虚拟机下CentOS7安装Nginx及简单用法</title>
      <link href="//nginx-simple-usage"/>
      <url>//nginx-simple-usage</url>
      
        <content type="html"><![CDATA[<h3 id="目的"><a href="#目的" class="headerlink" title="目的:"></a>目的:</h3><blockquote><p>熟悉nginx的安装与使用</p></blockquote><h3 id="环境"><a href="#环境" class="headerlink" title="环境:"></a>环境:</h3><blockquote><p>VirtualBox: 5.0.20<br>CentOS: CentOS-7-x86_64-Minimal-1511<br>Nginx: 1.10.0</p></blockquote><h3 id="安装步骤"><a href="#安装步骤" class="headerlink" title="安装步骤:"></a>安装步骤:</h3><blockquote><p>Nginx下载地址: <a href="http://nginx.org/download/nginx-1.10.0.tar.gz">http://nginx.org/download/nginx-1.10.0.tar.gz</a><br>下载完成后解压: tar zxvf nginx-1.10.0.tar.gz<br>然后进入解压目录: cd nginx-1.10.0<br>编译安装:<br>./configure<br>make &amp;&amp; make install</p></blockquote><p>默认安装目录在: /usr/local/nginx</p><h3 id="启动"><a href="#启动" class="headerlink" title="启动:"></a>启动:</h3><blockquote><p>cd到 nginx下的 sbin目录<br>执行命令 ./nginx</p></blockquote><h3 id="停止"><a href="#停止" class="headerlink" title="停止:"></a>停止:</h3><blockquote><p>使用ps命令查看 nginx的pid<br>ps -A | grep nginx<br>从容停止: kill -QUIT 查询到的nginx的pid<br>快速停止: kill -TERM 查询到的nginx的pid<br>强制停止: kill -9 查询到的nginx的pid</p></blockquote><h3 id="重启"><a href="#重启" class="headerlink" title="重启:"></a>重启:</h3><blockquote><p>cd到nginx的sbin目录<br>./nginx -s reload (这个命令在我测试的时候发现不能完全重启…不知为何…之后我都选择先停止,再启动)</p></blockquote><h3 id="修改conf"><a href="#修改conf" class="headerlink" title="修改conf:"></a>修改conf:</h3><blockquote><p>默认配置文件在nginx的根目录的conf中<br>进入该目录 vim nginx.conf 进行编辑.<br>编辑完成后一般需要先检测配置文件是否正常再重启系统nginx,以免配置文件错误.<br>检测命令(假如在nginx的sbin目录下): ./nginx -t</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> CentOS </tag>
            
            <tag> Nginx </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>记录一次VirtualBox安装Centos7的网络配置</title>
      <link href="//linux-virtualbox-centos7-network"/>
      <url>//linux-virtualbox-centos7-network</url>
      
        <content type="html"><![CDATA[<h3 id="目的"><a href="#目的" class="headerlink" title="目的:"></a>目的:</h3><blockquote><p>了解虚拟机的网络配置</p></blockquote><h3 id="要求"><a href="#要求" class="headerlink" title="要求:"></a>要求:</h3><blockquote><p>虚拟机和主机能互通<br>虚拟机要能访问网络</p></blockquote><h3 id="限制条件"><a href="#限制条件" class="headerlink" title="限制条件:"></a>限制条件:</h3><blockquote><p>公司环境下不允许分配独立IP</p></blockquote><h3 id="环境"><a href="#环境" class="headerlink" title="环境:"></a>环境:</h3><blockquote><p>win7 or OSX: 10.11.4<br>VirtualBox: 5.0.20<br>CentOS: CentOS-7-x86_64-Minimal-1511</p></blockquote><h3 id="虚拟机要能访问网络"><a href="#虚拟机要能访问网络" class="headerlink" title="虚拟机要能访问网络:"></a>虚拟机要能访问网络:</h3><blockquote><p>CentOS7 默认使用ip查看IP地址<br>配置文件位置:  /etc/sysconfig/network-scripts/<br>需要修改的配置项说明:<br>BOOTPROTO=dhcp #自动获取ip<br>ONBOOT=yes #开机启动网卡<br>重启网卡命令: service network restart<br>ip addr 查看ip信息</p></blockquote><p>VirtualBox 网络设置为 NAT模式,没有意外的话CentOS可以直接访问网络了</p><h3 id="虚拟机和主机能互通"><a href="#虚拟机和主机能互通" class="headerlink" title="虚拟机和主机能互通:"></a>虚拟机和主机能互通:</h3><blockquote><p>配置一个端口映射的规则即可<br>如下图<br><img src="http://githubblog-10030337.cos.myqcloud.com/linux-virtualbox-centos7-network.png?sign=pzMiwzChOjnJP2exdey0+5h05MZhPTEwMDMwMzM3Jms9QUtJRGNDZFJ2aDZITWsyTE1SNDFEMHo1SERFbzlORndwcWcxJmU9MTQ2OTE1NDk0MiZ0PTE0NjY1NjI5NDImcj0xNDM1NjQyOTUxJmY9L2xpbnV4LXZpcnR1YWxib3gtY2VudG9zNy1uZXR3b3JrLnBuZyZiPWdpdGh1YmJsb2c=" alt="1"></p></blockquote><h3 id="配置虚拟机的22端口映射"><a href="#配置虚拟机的22端口映射" class="headerlink" title="配置虚拟机的22端口映射"></a>配置虚拟机的22端口映射</h3><blockquote><p>win下使用putty进行ssh登陆<br>mac下使用 ssh登陆 ssh -p 12022 <a href="mailto:&#114;&#x6f;&#x6f;&#116;&#64;&#x31;&#x32;&#x37;&#46;&#48;&#x2e;&#48;&#x2e;&#49;">&#114;&#x6f;&#x6f;&#116;&#64;&#x31;&#x32;&#x37;&#46;&#48;&#x2e;&#48;&#x2e;&#49;</a></p></blockquote><table><thead><tr><th>主机IP</th><th>主机端口</th><th>虚拟机IP</th><th>虚拟机端口</th></tr></thead><tbody><tr><td>127.0.0.1</td><td>12022</td><td>10.0.2.15</td><td>22</td></tr></tbody></table>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> CentOS </tag>
            
            <tag> VirtualBox </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>FTP:远程服务器返回错误:(550)文件不可用</title>
      <link href="//ftp-error-550"/>
      <url>//ftp-error-550</url>
      
        <content type="html"><![CDATA[<h3 id="错误描述"><a href="#错误描述" class="headerlink" title="错误描述:"></a>错误描述:</h3><p>&emsp;&emsp;FTP:远程服务器返回错误:(550)文件不可用(例如,未找到文件,无法访问文件)</p><h3 id="分析"><a href="#分析" class="headerlink" title="分析:"></a>分析:</h3><p>&emsp;&emsp;最近在开发多服务器FTP文件同步应用时遇到了该问题. 开始死活找不到问题所在.网上查了一下都说是检测根目录或者文件是否存在.<br>&emsp;&emsp;最后发现是 FTP账号的权限问题,我没有配置对应账号的写权限…<br>&emsp;&emsp;总结遇到这个问题的排错方式:</p><ol><li>确定代码没有问题</li><li>检测文件或目录是否真的存在</li><li>检测FTP账号的可读可写权限</li><li>检测FTP账号的根目录</li></ol>]]></content>
      
      
      <categories>
          
          <category> CSharp </category>
          
      </categories>
      
      
        <tags>
            
            <tag> FTP </tag>
            
            <tag> CSharp </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
